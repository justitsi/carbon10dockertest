{"ast":null,"code":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\n\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\nexports.Disposable = vscode_jsonrpc_1.Disposable;\nexports.Event = vscode_jsonrpc_1.Event;\nexports.Emitter = vscode_jsonrpc_1.Emitter;\nexports.Trace = vscode_jsonrpc_1.Trace;\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\nexports.RequestType = vscode_jsonrpc_1.RequestType;\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\n\n__export(require(\"vscode-languageserver-types\"));\n\n__export(require(\"./protocol\"));\n\nfunction createProtocolConnection(reader, writer, logger, strategy) {\n  return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\n}\n\nexports.createProtocolConnection = createProtocolConnection;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/vscode-languageserver-protocol/lib/main.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","vscode_jsonrpc_1","require","ErrorCodes","ResponseError","CancellationToken","CancellationTokenSource","Disposable","Event","Emitter","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","RequestType","RequestType0","NotificationType","NotificationType0","MessageReader","MessageWriter","ConnectionStrategy","StreamMessageReader","StreamMessageWriter","IPCMessageReader","IPCMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","createProtocolConnection","reader","writer","logger","strategy","createMessageConnection"],"mappings":"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","sourcesContent":["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n"]},"metadata":{},"sourceType":"script"}