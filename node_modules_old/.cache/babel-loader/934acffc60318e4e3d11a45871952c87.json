{"ast":null,"code":"var _jsxFileName = \"/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/src/content/SynonymPage/SynonimDisplay.js\";\nimport React, { Component } from 'react';\nimport ItemList from '../../components/ItemList';\nconst headers = [{\n  key: \"word\",\n  header: \"word\"\n}, {\n  key: \"score\",\n  header: \"score\"\n}];\nconst rows = [{\n  word: \"glass\",\n  score: \"1000\"\n}, {\n  id: \"2\",\n  name: \"Doc 2\",\n  owner: \"Hristo\",\n  lastEdit: \"5 minutes ago\",\n  editedBy: \"Ivan\"\n}];\n\nclass WordDisplay extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      synonims: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.datamuse.com/words?ml=' + this.props.word).then(res => res.json()).then(data => {\n      this.setState({\n        synonims: data\n      });\n      console.log(data);\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"This is the word display element for the word:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 63\n      }\n    }), \" \", this.props.word), /*#__PURE__*/React.createElement(ItemList, {\n      headers: headers,\n      rows: rows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default WordDisplay;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/src/content/SynonymPage/SynonimDisplay.js"],"names":["React","Component","ItemList","headers","key","header","rows","word","score","id","name","owner","lastEdit","editedBy","WordDisplay","state","synonims","componentDidMount","fetch","props","then","res","json","data","setState","console","log","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,OAAO,GAAG,CACZ;AACEC,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADY,EAKZ;AACED,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,MAAM,EAAE;AAFV,CALY,CAAhB;AAWA,MAAMC,IAAI,GAAG,CACT;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADS,EAKT;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,KAAK,EAAE,QAHT;AAIEC,EAAAA,QAAQ,EAAE,eAJZ;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CALS,CAAb;;AAcA,MAAMC,WAAN,SAA0Bd,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCc,KADsC,GAC9B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD8B;AAAA;;AAKtCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,uCAAqC,KAAKC,KAAL,CAAWZ,IAAjD,CAAL,CACCa,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KALD,EAMCI,KAND,CAMOF,OAAO,CAACC,GANf;AAOH;;AAIDE,EAAAA,MAAM,GAAG;AACL,wBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,OAAyD,KAAKT,KAAL,CAAWZ,IAApE,CADA,eAEA,oBAAC,QAAD;AACI,MAAA,OAAO,EAAIJ,OADf;AAEI,MAAA,IAAI,EAAIG,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAUH;;AA5BqC;;AA8B1C,eAAeQ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport ItemList from '../../components/ItemList';\n\nconst headers = [\n    {\n      key: \"word\",\n      header: \"word\",\n    },\n    {\n      key: \"score\",\n      header: \"score\",\n    }\n  ];\n\nconst rows = [\n    {\n      word: \"glass\",\n      score: \"1000\"\n    },\n    {\n      id: \"2\",\n      name: \"Doc 2\",\n      owner: \"Hristo\",\n      lastEdit: \"5 minutes ago\",\n      editedBy: \"Ivan\"\n    }\n  ]\n\nclass WordDisplay extends React.Component {\n    state = {\n        synonims: []\n    }\n\n    componentDidMount() {\n        fetch('https://api.datamuse.com/words?ml='+this.props.word)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ synonims: data })\n          console.log(data)\n        })\n        .catch(console.log)\n    }\n\n\n\n    render (){\n        return (\n            <> \n            <h3>This is the word display element for the word:<br/> {this.props.word}</h3>\n            <ItemList\n                headers = {headers}\n                rows = {rows}\n            />\n\n            </>\n        );\n    }\n}\nexport default WordDisplay;"]},"metadata":{},"sourceType":"module"}