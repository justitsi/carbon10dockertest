{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = _interopRequireDefault(require(\"util.promisify\"));\n\nvar _child_process = _interopRequireDefault(require(\"child_process\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst exec = (0, _util.default)(_child_process.default.exec);\n/**\n * Returns a git diff given a path to the repo, a commit,\n * an optional second commit, and an optional file.\n *\n * Returns the diff as a string.\n */\n\nconst gitDiff = (pathToRepo, commit1, commit2 = '', file = '') => exec(`git diff ${commit1} ${commit2} -- ${file}`, {\n  cwd: pathToRepo,\n  encoding: 'utf8',\n  maxBuffer: 1024 * 1000\n}).then(output => output.stdout);\n\nvar _default = gitDiff;\nexports.default = _default;","map":{"version":3,"sources":["../src/git_diff.js"],"names":["exec","childProcess","gitDiff","commit2","file","commit1","cwd","encoding","maxBuffer","output"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;AAEA,MAAMA,IAAI,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAUC,cAAAA,CAAAA,OAAAA,CAAvB,IAAa,CAAb;AAEA;;;;;;;AAMA,MAAMC,OAAO,GAAG,CAAA,UAAA,EAAA,OAAA,EAAsBC,OAAO,GAA7B,EAAA,EAAoCC,IAAI,GAAxC,EAAA,KACd,IAAI,CAAE,YAAWC,OAAQ,IAAGF,OAAQ,OAAMC,IAAtC,EAAA,EAA8C;AAChDE,EAAAA,GAAG,EAD6C,UAAA;AAEhDC,EAAAA,QAAQ,EAFwC,MAAA;AAGhDC,EAAAA,SAAS,EAAE,OAAO;AAH8B,CAA9C,CAAJ,CAAA,IAAA,CAIQC,MAAM,IAAIA,MAAM,CAL1B,MACE,CADF;;eAOeP,O","sourcesContent":["import promisify from 'util.promisify';\nimport childProcess from 'child_process';\n\nconst exec = promisify(childProcess.exec);\n\n/**\n * Returns a git diff given a path to the repo, a commit,\n * an optional second commit, and an optional file.\n *\n * Returns the diff as a string.\n */\nconst gitDiff = (pathToRepo, commit1, commit2 = '', file = '') =>\n  exec(`git diff ${commit1} ${commit2} -- ${file}`, {\n    cwd: pathToRepo,\n    encoding: 'utf8',\n    maxBuffer: 1024 * 1000\n  }).then(output => output.stdout);\n\nexport default gitDiff;\n"]},"metadata":{},"sourceType":"script"}