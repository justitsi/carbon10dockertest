{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\n\nexports.CHECK_PARTIAL_SCHEMA = graphql_tag_1.default`\n  mutation CheckPartialSchema(\n    $id: ID!\n    $graphVariant: String!\n    $implementingServiceName: String!\n    $partialSchema: PartialSchemaInput!\n    $gitContext: GitContextInput\n    $historicParameters: HistoricQueryParameters\n  ) {\n    service(id: $id) {\n      checkPartialSchema(\n        graphVariant: $graphVariant\n        implementingServiceName: $implementingServiceName\n        partialSchema: $partialSchema\n        gitContext: $gitContext\n        historicParameters: $historicParameters\n      ) {\n        compositionValidationResult {\n          compositionValidationDetails {\n            schemaHash\n          }\n          graphCompositionID\n          errors {\n            message\n          }\n        }\n        checkSchemaResult {\n          diffToPrevious {\n            severity\n            affectedClients {\n              __typename\n            }\n            affectedQueries {\n              __typename\n            }\n            numberOfCheckedOperations\n            changes {\n              severity\n              code\n              description\n            }\n            validationConfig {\n              from\n              to\n              queryCountThreshold\n              queryCountThresholdPercentage\n            }\n          }\n          targetUrl\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["../../../src/engine/operations/checkPartialSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,oBAAA,GAAuB,aAAA,CAAA,OAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.CHECK_PARTIAL_SCHEMA = graphql_tag_1.default `\n  mutation CheckPartialSchema(\n    $id: ID!\n    $graphVariant: String!\n    $implementingServiceName: String!\n    $partialSchema: PartialSchemaInput!\n    $gitContext: GitContextInput\n    $historicParameters: HistoricQueryParameters\n  ) {\n    service(id: $id) {\n      checkPartialSchema(\n        graphVariant: $graphVariant\n        implementingServiceName: $implementingServiceName\n        partialSchema: $partialSchema\n        gitContext: $gitContext\n        historicParameters: $historicParameters\n      ) {\n        compositionValidationResult {\n          compositionValidationDetails {\n            schemaHash\n          }\n          graphCompositionID\n          errors {\n            message\n          }\n        }\n        checkSchemaResult {\n          diffToPrevious {\n            severity\n            affectedClients {\n              __typename\n            }\n            affectedQueries {\n              __typename\n            }\n            numberOfCheckedOperations\n            changes {\n              severity\n              code\n              description\n            }\n            validationConfig {\n              from\n              to\n              queryCountThreshold\n              queryCountThresholdPercentage\n            }\n          }\n          targetUrl\n        }\n      }\n    }\n  }\n`;\n//# sourceMappingURL=checkPartialSchema.js.map"]},"metadata":{},"sourceType":"script"}