{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requiresUsedOnBase = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst utils_1 = require(\"../../utils\");\n\nexports.requiresUsedOnBase = ({\n  name: serviceName,\n  typeDefs\n}) => {\n  const errors = [];\n  graphql_1.visit(typeDefs, {\n    ObjectTypeDefinition(typeDefinition) {\n      if (typeDefinition.fields) {\n        for (const field of typeDefinition.fields) {\n          if (field.directives) {\n            for (const directive of field.directives) {\n              const name = directive.name.value;\n\n              if (name === 'requires') {\n                errors.push(utils_1.errorWithCode('REQUIRES_USED_ON_BASE', utils_1.logServiceAndType(serviceName, typeDefinition.name.value, field.name.value) + `Found extraneous @requires directive. @requires cannot be used on base types.`));\n              }\n            }\n          }\n        }\n      }\n    }\n\n  });\n  return errors;\n};","map":{"version":3,"sources":["../../../../src/composition/validate/preComposition/requiresUsedOnBase.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAGA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAKa,OAAA,CAAA,kBAAA,GAAqB,CAAC;AACjC,EAAA,IAAI,EAAE,WAD2B;AAEjC,EAAA;AAFiC,CAAD,KAGV;AACtB,QAAM,MAAM,GAAmB,EAA/B;AAEA,EAAA,SAAA,CAAA,KAAA,CAAM,QAAN,EAAgB;AACd,IAAA,oBAAoB,CAAC,cAAD,EAAe;AACjC,UAAI,cAAc,CAAC,MAAnB,EAA2B;AACzB,aAAK,MAAM,KAAX,IAAoB,cAAc,CAAC,MAAnC,EAA2C;AACzC,cAAI,KAAK,CAAC,UAAV,EAAsB;AACpB,iBAAK,MAAM,SAAX,IAAwB,KAAK,CAAC,UAA9B,EAA0C;AACxC,oBAAM,IAAI,GAAG,SAAS,CAAC,IAAV,CAAe,KAA5B;;AACA,kBAAI,IAAI,KAAK,UAAb,EAAyB;AACvB,gBAAA,MAAM,CAAC,IAAP,CACE,OAAA,CAAA,aAAA,CACE,uBADF,EAEE,OAAA,CAAA,iBAAA,CACE,WADF,EAEE,cAAc,CAAC,IAAf,CAAoB,KAFtB,EAGE,KAAK,CAAC,IAAN,CAAW,KAHb,IAKE,+EAPJ,CADF;AAWD;AACF;AACF;AACF;AACF;AACF;;AAxBa,GAAhB;AA2BA,SAAO,MAAP;AACD,CAlCY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requiresUsedOnBase = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"../../utils\");\nexports.requiresUsedOnBase = ({ name: serviceName, typeDefs, }) => {\n    const errors = [];\n    graphql_1.visit(typeDefs, {\n        ObjectTypeDefinition(typeDefinition) {\n            if (typeDefinition.fields) {\n                for (const field of typeDefinition.fields) {\n                    if (field.directives) {\n                        for (const directive of field.directives) {\n                            const name = directive.name.value;\n                            if (name === 'requires') {\n                                errors.push(utils_1.errorWithCode('REQUIRES_USED_ON_BASE', utils_1.logServiceAndType(serviceName, typeDefinition.name.value, field.name.value) +\n                                    `Found extraneous @requires directive. @requires cannot be used on base types.`));\n                            }\n                        }\n                    }\n                }\n            }\n        },\n    });\n    return errors;\n};\n//# sourceMappingURL=requiresUsedOnBase.js.map"]},"metadata":{},"sourceType":"script"}