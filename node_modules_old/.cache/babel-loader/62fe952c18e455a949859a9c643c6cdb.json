{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst screen_1 = require(\"./screen\");\n\nconst util_1 = require(\"./util\");\n\nfunction linewrap(length, s) {\n  const lw = require('@oclif/linewrap');\n\n  return lw(length, screen_1.stdtermwidth, {\n    skipScheme: 'ansi-color'\n  })(s).trim();\n}\n\nfunction renderList(items) {\n  if (items.length === 0) {\n    return '';\n  }\n\n  const maxLength = util_1.maxBy(items, i => i[0].length)[0].length;\n  const lines = items.map(i => {\n    let left = i[0];\n    let right = i[1];\n\n    if (!right) {\n      return left;\n    }\n\n    left = left.padEnd(maxLength);\n    right = linewrap(maxLength + 2, right);\n    return `${left}  ${right}`;\n  });\n  return lines.join('\\n');\n}\n\nexports.renderList = renderList;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/parser/lib/list.js"],"names":["Object","defineProperty","exports","value","screen_1","require","util_1","linewrap","length","s","lw","stdtermwidth","skipScheme","trim","renderList","items","maxLength","maxBy","i","lines","map","left","right","padEnd","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASE,QAAT,CAAkBC,MAAlB,EAA0BC,CAA1B,EAA6B;AACzB,QAAMC,EAAE,GAAGL,OAAO,CAAC,iBAAD,CAAlB;;AACA,SAAOK,EAAE,CAACF,MAAD,EAASJ,QAAQ,CAACO,YAAlB,EAAgC;AACrCC,IAAAA,UAAU,EAAE;AADyB,GAAhC,CAAF,CAEJH,CAFI,EAEDI,IAFC,EAAP;AAGH;;AACD,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIA,KAAK,CAACP,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAO,EAAP;AACH;;AACD,QAAMQ,SAAS,GAAIV,MAAM,CAACW,KAAP,CAAaF,KAAb,EAAoBG,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKV,MAA9B,CAAD,CAAwC,CAAxC,EAA2CA,MAA7D;AACA,QAAMW,KAAK,GAAGJ,KAAK,CAACK,GAAN,CAAUF,CAAC,IAAI;AACzB,QAAIG,IAAI,GAAGH,CAAC,CAAC,CAAD,CAAZ;AACA,QAAII,KAAK,GAAGJ,CAAC,CAAC,CAAD,CAAb;;AACA,QAAI,CAACI,KAAL,EAAY;AACR,aAAOD,IAAP;AACH;;AACDA,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAYP,SAAZ,CAAP;AACAM,IAAAA,KAAK,GAAGf,QAAQ,CAACS,SAAS,GAAG,CAAb,EAAgBM,KAAhB,CAAhB;AACA,WAAQ,GAAED,IAAK,KAAIC,KAAM,EAAzB;AACH,GATa,CAAd;AAUA,SAAOH,KAAK,CAACK,IAAN,CAAW,IAAX,CAAP;AACH;;AACDtB,OAAO,CAACY,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst screen_1 = require(\"./screen\");\nconst util_1 = require(\"./util\");\nfunction linewrap(length, s) {\n    const lw = require('@oclif/linewrap');\n    return lw(length, screen_1.stdtermwidth, {\n        skipScheme: 'ansi-color',\n    })(s).trim();\n}\nfunction renderList(items) {\n    if (items.length === 0) {\n        return '';\n    }\n    const maxLength = (util_1.maxBy(items, i => i[0].length))[0].length;\n    const lines = items.map(i => {\n        let left = i[0];\n        let right = i[1];\n        if (!right) {\n            return left;\n        }\n        left = left.padEnd(maxLength);\n        right = linewrap(maxLength + 2, right);\n        return `${left}  ${right}`;\n    });\n    return lines.join('\\n');\n}\nexports.renderList = renderList;\n"]},"metadata":{},"sourceType":"script"}