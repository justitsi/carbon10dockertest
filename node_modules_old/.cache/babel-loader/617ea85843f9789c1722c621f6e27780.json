{"ast":null,"code":"'use strict';\n\nconst ansiEscapes = require('ansi-escapes');\n\nconst cliCursor = require('cli-cursor');\n\nconst wrapAnsi = require('wrap-ansi');\n\nconst getWidth = stream => {\n  const columns = stream.columns;\n\n  if (!columns) {\n    return 80;\n  } // Windows appears to wrap a character early\n  // I hate Windows so much\n\n\n  if (process.platform === 'win32') {\n    return columns - 1;\n  }\n\n  return columns;\n};\n\nconst main = (stream, options) => {\n  options = Object.assign({\n    showCursor: false\n  }, options);\n  let prevLineCount = 0;\n\n  const render = function () {\n    if (!options.showCursor) {\n      cliCursor.hide();\n    }\n\n    let out = [].join.call(arguments, ' ') + '\\n';\n    out = wrapAnsi(out, getWidth(stream), {\n      trim: false,\n      hard: true,\n      wordWrap: false\n    });\n    stream.write(ansiEscapes.eraseLines(prevLineCount) + out);\n    prevLineCount = out.split('\\n').length;\n  };\n\n  render.clear = () => {\n    stream.write(ansiEscapes.eraseLines(prevLineCount));\n    prevLineCount = 0;\n  };\n\n  render.done = () => {\n    prevLineCount = 0;\n\n    if (!options.showCursor) {\n      cliCursor.show();\n    }\n  };\n\n  return render;\n};\n\nmodule.exports = main(process.stdout);\nmodule.exports.stderr = main(process.stderr);\nmodule.exports.create = main;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/log-update/index.js"],"names":["ansiEscapes","require","cliCursor","wrapAnsi","getWidth","stream","columns","process","platform","main","options","Object","assign","showCursor","prevLineCount","render","hide","out","join","call","arguments","trim","hard","wordWrap","write","eraseLines","split","length","clear","done","show","module","exports","stdout","stderr","create"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAMG,QAAQ,GAAGC,MAAM,IAAI;AAC1B,QAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;;AAEA,MAAI,CAACA,OAAL,EAAc;AACb,WAAO,EAAP;AACA,GALyB,CAO1B;AACA;;;AACA,MAAIC,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AACjC,WAAOF,OAAO,GAAG,CAAjB;AACA;;AAED,SAAOA,OAAP;AACA,CAdD;;AAgBA,MAAMG,IAAI,GAAG,CAACJ,MAAD,EAASK,OAAT,KAAqB;AACjCA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACvBC,IAAAA,UAAU,EAAE;AADW,GAAd,EAEPH,OAFO,CAAV;AAIA,MAAII,aAAa,GAAG,CAApB;;AAEA,QAAMC,MAAM,GAAG,YAAY;AAC1B,QAAI,CAACL,OAAO,CAACG,UAAb,EAAyB;AACxBX,MAAAA,SAAS,CAACc,IAAV;AACA;;AAED,QAAIC,GAAG,GAAG,GAAGC,IAAH,CAAQC,IAAR,CAAaC,SAAb,EAAwB,GAAxB,IAA+B,IAAzC;AACAH,IAAAA,GAAG,GAAGd,QAAQ,CAACc,GAAD,EAAMb,QAAQ,CAACC,MAAD,CAAd,EAAwB;AACrCgB,MAAAA,IAAI,EAAE,KAD+B;AAErCC,MAAAA,IAAI,EAAE,IAF+B;AAGrCC,MAAAA,QAAQ,EAAE;AAH2B,KAAxB,CAAd;AAKAlB,IAAAA,MAAM,CAACmB,KAAP,CAAaxB,WAAW,CAACyB,UAAZ,CAAuBX,aAAvB,IAAwCG,GAArD;AACAH,IAAAA,aAAa,GAAGG,GAAG,CAACS,KAAJ,CAAU,IAAV,EAAgBC,MAAhC;AACA,GAbD;;AAeAZ,EAAAA,MAAM,CAACa,KAAP,GAAe,MAAM;AACpBvB,IAAAA,MAAM,CAACmB,KAAP,CAAaxB,WAAW,CAACyB,UAAZ,CAAuBX,aAAvB,CAAb;AACAA,IAAAA,aAAa,GAAG,CAAhB;AACA,GAHD;;AAKAC,EAAAA,MAAM,CAACc,IAAP,GAAc,MAAM;AACnBf,IAAAA,aAAa,GAAG,CAAhB;;AAEA,QAAI,CAACJ,OAAO,CAACG,UAAb,EAAyB;AACxBX,MAAAA,SAAS,CAAC4B,IAAV;AACA;AACD,GAND;;AAQA,SAAOf,MAAP;AACA,CApCD;;AAsCAgB,MAAM,CAACC,OAAP,GAAiBvB,IAAI,CAACF,OAAO,CAAC0B,MAAT,CAArB;AACAF,MAAM,CAACC,OAAP,CAAeE,MAAf,GAAwBzB,IAAI,CAACF,OAAO,CAAC2B,MAAT,CAA5B;AACAH,MAAM,CAACC,OAAP,CAAeG,MAAf,GAAwB1B,IAAxB","sourcesContent":["'use strict';\nconst ansiEscapes = require('ansi-escapes');\nconst cliCursor = require('cli-cursor');\nconst wrapAnsi = require('wrap-ansi');\n\nconst getWidth = stream => {\n\tconst columns = stream.columns;\n\n\tif (!columns) {\n\t\treturn 80;\n\t}\n\n\t// Windows appears to wrap a character early\n\t// I hate Windows so much\n\tif (process.platform === 'win32') {\n\t\treturn columns - 1;\n\t}\n\n\treturn columns;\n};\n\nconst main = (stream, options) => {\n\toptions = Object.assign({\n\t\tshowCursor: false\n\t}, options);\n\n\tlet prevLineCount = 0;\n\n\tconst render = function () {\n\t\tif (!options.showCursor) {\n\t\t\tcliCursor.hide();\n\t\t}\n\n\t\tlet out = [].join.call(arguments, ' ') + '\\n';\n\t\tout = wrapAnsi(out, getWidth(stream), {\n\t\t\ttrim: false,\n\t\t\thard: true,\n\t\t\twordWrap: false\n\t\t});\n\t\tstream.write(ansiEscapes.eraseLines(prevLineCount) + out);\n\t\tprevLineCount = out.split('\\n').length;\n\t};\n\n\trender.clear = () => {\n\t\tstream.write(ansiEscapes.eraseLines(prevLineCount));\n\t\tprevLineCount = 0;\n\t};\n\n\trender.done = () => {\n\t\tprevLineCount = 0;\n\n\t\tif (!options.showCursor) {\n\t\t\tcliCursor.show();\n\t\t}\n\t};\n\n\treturn render;\n};\n\nmodule.exports = main(process.stdout);\nmodule.exports.stderr = main(process.stderr);\nmodule.exports.create = main;\n"]},"metadata":{},"sourceType":"script"}