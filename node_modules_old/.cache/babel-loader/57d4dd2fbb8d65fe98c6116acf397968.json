{"ast":null,"code":"var common = require('./common');\n\nvar fs = require('fs');\n\ncommon.register('cat', _cat, {\n  canReceivePipe: true\n}); //@\n//@ ### cat(file [, file ...])\n//@ ### cat(file_array)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = cat('file*.txt');\n//@ var str = cat('file1', 'file2');\n//@ var str = cat(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Returns a string containing the given file, or a concatenated string\n//@ containing the files if more than one file is given (a new line character is\n//@ introduced between each file).\n\nfunction _cat(options, files) {\n  var cat = common.readFromPipe();\n  if (!files && !cat) common.error('no paths given');\n  files = [].slice.call(arguments, 1);\n  files.forEach(function (file) {\n    if (!fs.existsSync(file)) {\n      common.error('no such file or directory: ' + file);\n    }\n\n    cat += fs.readFileSync(file, 'utf8');\n  });\n  return cat;\n}\n\nmodule.exports = _cat;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/shelljs/src/cat.js"],"names":["common","require","fs","register","_cat","canReceivePipe","options","files","cat","readFromPipe","error","slice","call","arguments","forEach","file","existsSync","readFileSync","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AAEAD,MAAM,CAACG,QAAP,CAAgB,KAAhB,EAAuBC,IAAvB,EAA6B;AAC3BC,EAAAA,cAAc,EAAE;AADW,CAA7B,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,IAAT,CAAcE,OAAd,EAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,GAAG,GAAGR,MAAM,CAACS,YAAP,EAAV;AAEA,MAAI,CAACF,KAAD,IAAU,CAACC,GAAf,EAAoBR,MAAM,CAACU,KAAP,CAAa,gBAAb;AAEpBH,EAAAA,KAAK,GAAG,GAAGI,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAR;AAEAN,EAAAA,KAAK,CAACO,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC5B,QAAI,CAACb,EAAE,CAACc,UAAH,CAAcD,IAAd,CAAL,EAA0B;AACxBf,MAAAA,MAAM,CAACU,KAAP,CAAa,gCAAgCK,IAA7C;AACD;;AAEDP,IAAAA,GAAG,IAAIN,EAAE,CAACe,YAAH,CAAgBF,IAAhB,EAAsB,MAAtB,CAAP;AACD,GAND;AAQA,SAAOP,GAAP;AACD;;AACDU,MAAM,CAACC,OAAP,GAAiBf,IAAjB","sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('cat', _cat, {\n  canReceivePipe: true,\n});\n\n//@\n//@ ### cat(file [, file ...])\n//@ ### cat(file_array)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = cat('file*.txt');\n//@ var str = cat('file1', 'file2');\n//@ var str = cat(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Returns a string containing the given file, or a concatenated string\n//@ containing the files if more than one file is given (a new line character is\n//@ introduced between each file).\nfunction _cat(options, files) {\n  var cat = common.readFromPipe();\n\n  if (!files && !cat) common.error('no paths given');\n\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    if (!fs.existsSync(file)) {\n      common.error('no such file or directory: ' + file);\n    }\n\n    cat += fs.readFileSync(file, 'utf8');\n  });\n\n  return cat;\n}\nmodule.exports = _cat;\n"]},"metadata":{},"sourceType":"script"}