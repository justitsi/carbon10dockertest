{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst chalk_1 = require(\"chalk\");\n\nconst indent = require(\"indent-string\");\n\nconst stripAnsi = require(\"strip-ansi\");\n\nconst util_1 = require(\"./util\");\n\nconst wrap = require('wrap-ansi');\n\nconst {\n  bold\n} = chalk_1.default;\n\nclass RootHelp {\n  constructor(config, opts) {\n    this.config = config;\n    this.opts = opts;\n    this.render = util_1.template(this);\n  }\n\n  root() {\n    let description = this.config.pjson.oclif.description || this.config.pjson.description || '';\n    description = this.render(description);\n    description = description.split('\\n')[0];\n    let output = util_1.compact([description, this.version(), this.usage(), this.description()]).join('\\n\\n');\n    if (this.opts.stripAnsi) output = stripAnsi(output);\n    return output;\n  }\n\n  usage() {\n    return [bold('USAGE'), indent(wrap(`$ ${this.config.bin} [COMMAND]`, this.opts.maxWidth - 2, {\n      trim: false,\n      hard: true\n    }), 2)].join('\\n');\n  }\n\n  description() {\n    let description = this.config.pjson.oclif.description || this.config.pjson.description || '';\n    description = this.render(description);\n    description = description.split('\\n').slice(1).join('\\n');\n    if (!description) return;\n    return [bold('DESCRIPTION'), indent(wrap(description, this.opts.maxWidth - 2, {\n      trim: false,\n      hard: true\n    }), 2)].join('\\n');\n  }\n\n  version() {\n    return [bold('VERSION'), indent(wrap(this.config.userAgent, this.opts.maxWidth - 2, {\n      trim: false,\n      hard: true\n    }), 2)].join('\\n');\n  }\n\n}\n\nexports.default = RootHelp;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/command/node_modules/@oclif/plugin-help/lib/root.js"],"names":["Object","defineProperty","exports","value","chalk_1","require","indent","stripAnsi","util_1","wrap","bold","default","RootHelp","constructor","config","opts","render","template","root","description","pjson","oclif","split","output","compact","version","usage","join","bin","maxWidth","trim","hard","slice","userAgent"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = require(\"chalk\");\nconst indent = require(\"indent-string\");\nconst stripAnsi = require(\"strip-ansi\");\nconst util_1 = require(\"./util\");\nconst wrap = require('wrap-ansi');\nconst { bold, } = chalk_1.default;\nclass RootHelp {\n    constructor(config, opts) {\n        this.config = config;\n        this.opts = opts;\n        this.render = util_1.template(this);\n    }\n    root() {\n        let description = this.config.pjson.oclif.description || this.config.pjson.description || '';\n        description = this.render(description);\n        description = description.split('\\n')[0];\n        let output = util_1.compact([\n            description,\n            this.version(),\n            this.usage(),\n            this.description(),\n        ]).join('\\n\\n');\n        if (this.opts.stripAnsi)\n            output = stripAnsi(output);\n        return output;\n    }\n    usage() {\n        return [\n            bold('USAGE'),\n            indent(wrap(`$ ${this.config.bin} [COMMAND]`, this.opts.maxWidth - 2, { trim: false, hard: true }), 2),\n        ].join('\\n');\n    }\n    description() {\n        let description = this.config.pjson.oclif.description || this.config.pjson.description || '';\n        description = this.render(description);\n        description = description.split('\\n').slice(1).join('\\n');\n        if (!description)\n            return;\n        return [\n            bold('DESCRIPTION'),\n            indent(wrap(description, this.opts.maxWidth - 2, { trim: false, hard: true }), 2),\n        ].join('\\n');\n    }\n    version() {\n        return [\n            bold('VERSION'),\n            indent(wrap(this.config.userAgent, this.opts.maxWidth - 2, { trim: false, hard: true }), 2),\n        ].join('\\n');\n    }\n}\nexports.default = RootHelp;\n"]},"metadata":{},"sourceType":"script"}