{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\n\nexports.UPLOAD_AND_COMPOSE_PARTIAL_SCHEMA = graphql_tag_1.default`\n  mutation UploadAndComposePartialSchema(\n    $id: ID!\n    $graphVariant: String!\n    $name: String!\n    $url: String!\n    $revision: String!\n    $activePartialSchema: PartialSchemaInput!\n  ) {\n    service(id: $id) {\n      upsertImplementingServiceAndTriggerComposition(\n        name: $name\n        url: $url\n        revision: $revision\n        activePartialSchema: $activePartialSchema\n        graphVariant: $graphVariant\n      ) {\n        compositionConfig {\n          schemaHash\n        }\n        errors {\n          message\n        }\n        didUpdateGateway: updatedGateway\n        serviceWasCreated: wasCreated\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["../../../src/engine/operations/uploadAndComposePartialSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,iCAAA,GAAoC,aAAA,CAAA,OAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvC","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.UPLOAD_AND_COMPOSE_PARTIAL_SCHEMA = graphql_tag_1.default `\n  mutation UploadAndComposePartialSchema(\n    $id: ID!\n    $graphVariant: String!\n    $name: String!\n    $url: String!\n    $revision: String!\n    $activePartialSchema: PartialSchemaInput!\n  ) {\n    service(id: $id) {\n      upsertImplementingServiceAndTriggerComposition(\n        name: $name\n        url: $url\n        revision: $revision\n        activePartialSchema: $activePartialSchema\n        graphVariant: $graphVariant\n      ) {\n        compositionConfig {\n          schemaHash\n        }\n        errors {\n          message\n        }\n        didUpdateGateway: updatedGateway\n        serviceWasCreated: wasCreated\n      }\n    }\n  }\n`;\n//# sourceMappingURL=uploadAndComposePartialSchema.js.map"]},"metadata":{},"sourceType":"script"}