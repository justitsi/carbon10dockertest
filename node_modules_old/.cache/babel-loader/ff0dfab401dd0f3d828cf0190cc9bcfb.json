{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.opt = opt;\nexports.list = list;\nexports.butNot = butNot;\nexports.t = t;\nexports.p = p; // An optional rule.\n\nfunction opt(ofRule) {\n  return {\n    ofRule: ofRule\n  };\n} // A list of another rule.\n\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  \n */\n// These functions help build matching rules for ParseRules.\n\n\nfunction list(ofRule, separator) {\n  return {\n    ofRule: ofRule,\n    isList: true,\n    separator: separator\n  };\n} // An constraint described as `but not` in the GraphQL spec.\n\n\nfunction butNot(rule, exclusions) {\n  var ruleMatch = rule.match;\n\n  rule.match = function (token) {\n    var check = false;\n\n    if (ruleMatch) {\n      check = ruleMatch(token);\n    }\n\n    return check && exclusions.every(function (exclusion) {\n      return exclusion.match && !exclusion.match(token);\n    });\n  };\n\n  return rule;\n} // Token of a kind\n\n\nfunction t(kind, style) {\n  return {\n    style: style,\n    match: function match(token) {\n      return token.kind === kind;\n    }\n  };\n} // Punctuator\n\n\nfunction p(value, style) {\n  return {\n    style: style || 'punctuation',\n    match: function match(token) {\n      return token.kind === 'Punctuation' && token.value === value;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@apollographql/graphql-language-service-parser/dist/RuleHelpers.js"],"names":["Object","defineProperty","exports","value","opt","list","butNot","t","p","ofRule","separator","isList","rule","exclusions","ruleMatch","match","token","check","every","exclusion","kind","style"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,GAAR,GAAcA,GAAd;AACAF,OAAO,CAACG,IAAR,GAAeA,IAAf;AACAH,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACAJ,OAAO,CAACK,CAAR,GAAYA,CAAZ;AACAL,OAAO,CAACM,CAAR,GAAYA,CAAZ,C,CAGA;;AACA,SAASJ,GAAT,CAAaK,MAAb,EAAqB;AACnB,SAAO;AAAEA,IAAAA,MAAM,EAAEA;AAAV,GAAP;AACD,C,CAED;;AACA;;;;;;;;;AAUA;;;AAEA,SAASJ,IAAT,CAAcI,MAAd,EAAsBC,SAAtB,EAAiC;AAC/B,SAAO;AAAED,IAAAA,MAAM,EAAEA,MAAV;AAAkBE,IAAAA,MAAM,EAAE,IAA1B;AAAgCD,IAAAA,SAAS,EAAEA;AAA3C,GAAP;AACD,C,CAED;;;AACA,SAASJ,MAAT,CAAgBM,IAAhB,EAAsBC,UAAtB,EAAkC;AAChC,MAAIC,SAAS,GAAGF,IAAI,CAACG,KAArB;;AACAH,EAAAA,IAAI,CAACG,KAAL,GAAa,UAAUC,KAAV,EAAiB;AAC5B,QAAIC,KAAK,GAAG,KAAZ;;AACA,QAAIH,SAAJ,EAAe;AACbG,MAAAA,KAAK,GAAGH,SAAS,CAACE,KAAD,CAAjB;AACD;;AACD,WAAOC,KAAK,IAAIJ,UAAU,CAACK,KAAX,CAAiB,UAAUC,SAAV,EAAqB;AACpD,aAAOA,SAAS,CAACJ,KAAV,IAAmB,CAACI,SAAS,CAACJ,KAAV,CAAgBC,KAAhB,CAA3B;AACD,KAFe,CAAhB;AAGD,GARD;;AASA,SAAOJ,IAAP;AACD,C,CAED;;;AACA,SAASL,CAAT,CAAWa,IAAX,EAAiBC,KAAjB,EAAwB;AACtB,SAAO;AAAEA,IAAAA,KAAK,EAAEA,KAAT;AAAgBN,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsB;AAChD,aAAOA,KAAK,CAACI,IAAN,KAAeA,IAAtB;AACD;AAFI,GAAP;AAGD,C,CAED;;;AACA,SAASZ,CAAT,CAAWL,KAAX,EAAkBkB,KAAlB,EAAyB;AACvB,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,IAAI,aADX;AAELN,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsB;AAC3B,aAAOA,KAAK,CAACI,IAAN,KAAe,aAAf,IAAgCJ,KAAK,CAACb,KAAN,KAAgBA,KAAvD;AACD;AAJI,GAAP;AAMD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.opt = opt;\nexports.list = list;\nexports.butNot = butNot;\nexports.t = t;\nexports.p = p;\n\n\n// An optional rule.\nfunction opt(ofRule) {\n  return { ofRule: ofRule };\n}\n\n// A list of another rule.\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  \n */\n\n// These functions help build matching rules for ParseRules.\n\nfunction list(ofRule, separator) {\n  return { ofRule: ofRule, isList: true, separator: separator };\n}\n\n// An constraint described as `but not` in the GraphQL spec.\nfunction butNot(rule, exclusions) {\n  var ruleMatch = rule.match;\n  rule.match = function (token) {\n    var check = false;\n    if (ruleMatch) {\n      check = ruleMatch(token);\n    }\n    return check && exclusions.every(function (exclusion) {\n      return exclusion.match && !exclusion.match(token);\n    });\n  };\n  return rule;\n}\n\n// Token of a kind\nfunction t(kind, style) {\n  return { style: style, match: function match(token) {\n      return token.kind === kind;\n    } };\n}\n\n// Punctuator\nfunction p(value, style) {\n  return {\n    style: style || 'punctuation',\n    match: function match(token) {\n      return token.kind === 'Punctuation' && token.value === value;\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}