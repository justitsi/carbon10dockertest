{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSchema = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst directives_1 = __importStar(require(\"../directives\"));\n\nconst types_1 = require(\"../types\");\n\nfunction isSpecifiedDirective(directive) {\n  return [...graphql_1.specifiedDirectives, ...directives_1.default].some(specifiedDirective => specifiedDirective.name === directive.name);\n}\n\nfunction isDefinedType(type) {\n  return !graphql_1.isSpecifiedScalarType(type) && !graphql_1.isIntrospectionType(type) && !types_1.isFederationType(type);\n}\n\nfunction printSchema(schema) {\n  const directives = schema.getDirectives().filter(n => !isSpecifiedDirective(n));\n  const typeMap = schema.getTypeMap();\n  const types = Object.values(typeMap).sort((type1, type2) => type1.name.localeCompare(type2.name)).filter(isDefinedType);\n  return [printSchemaDefinition(schema)].concat(directives.map(directive => printDirective(directive)), types.map(type => printType(type))).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nexports.printSchema = printSchema;\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if (graphql_1.isScalarType(type)) {\n    return printScalar(type);\n  } else if (graphql_1.isObjectType(type)) {\n    return printObject(type);\n  } else if (graphql_1.isInterfaceType(type)) {\n    return printInterface(type);\n  } else if (graphql_1.isUnionType(type)) {\n    return printUnion(type);\n  } else if (graphql_1.isEnumType(type)) {\n    return printEnum(type);\n  } else if (graphql_1.isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n\n  throw new Error(`Unexpected type: \"${type}\".`);\n}\n\nfunction printScalar(type) {\n  return printDescription(type) + `scalar ${type.name}`;\n}\n\nfunction printFederationDirectives(type) {\n  if (!type.astNode) return '';\n  if (graphql_1.isInputObjectType(type)) return '';\n  const directives = directives_1.gatherDirectives(type).filter(n => directives_1.default.some(fedDir => fedDir.name === n.name.value)).map(graphql_1.print).join(' ');\n  return directives.length > 0 ? ' ' + directives : '';\n}\n\nfunction printObject(type) {\n  const interfaces = type.getInterfaces();\n  const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n  const implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(i => i.name).join(' & ') : '';\n  return printDescription(type) + `${isExtension ? 'extend ' : ''}type ${type.name}${implementedInterfaces}${printFederationDirectives(type)}` + printFields(type);\n}\n\nfunction printInterface(type) {\n  const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n  return printDescription(type) + `${isExtension ? 'extend ' : ''}interface ${type.name}${printFederationDirectives(type)}` + printFields(type);\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type.getValues().map(value => printDescription(value, '  ') + '  ' + value.name + printDeprecated(value));\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(f => printDescription(f, '  ') + '  ' + printInputValue(f));\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(f => printDescription(f, '  ') + '  ' + f.name + printArgs(f.args, '  ') + ': ' + String(f.type) + printDeprecated(f) + printFederationDirectives(f));\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  }\n\n  if (args.every(arg => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(arg => printDescription(arg, '  ' + indentation) + '  ' + indentation + printInputValue(arg)).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = graphql_1.astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${graphql_1.print(defaultAST)}`;\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive) {\n  return printDescription(directive) + 'directive @' + directive.name + printArgs(directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  const reason = fieldOrEnumVal.deprecationReason;\n  const reasonAST = graphql_1.astFromValue(reason, graphql_1.GraphQLString);\n\n  if (reasonAST && reason !== '' && reason !== graphql_1.DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated(reason: ' + graphql_1.print(reasonAST) + ')';\n  }\n\n  return ' @deprecated';\n}\n\nfunction printDescription(def, indentation = '') {\n  if (def.description == null) {\n    return '';\n  }\n\n  const lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (lines.length === 1) {\n    return indentation + `\"${lines[0]}\"\\n`;\n  } else {\n    return indentation + ['\"\"\"', ...lines, '\"\"\"'].join('\\n' + indentation) + '\\n';\n  }\n}\n\nfunction descriptionLines(description, maxLen) {\n  const rawLines = description.split('\\n');\n  return rawLines.flatMap(line => {\n    if (line.length < maxLen + 5) {\n      return line;\n    }\n\n    return breakLine(line, maxLen);\n  });\n}\n\nfunction breakLine(line, maxLen) {\n  const parts = line.split(new RegExp(`((?: |^).{15,${maxLen - 40}}(?= |$))`));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  const sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (let i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}","map":{"version":3,"sources":["../../src/service/printFederatedSchema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_1 = __importStar(require(\"../directives\"));\nconst types_1 = require(\"../types\");\nfunction isSpecifiedDirective(directive) {\n    return [...graphql_1.specifiedDirectives, ...directives_1.default].some(specifiedDirective => specifiedDirective.name === directive.name);\n}\nfunction isDefinedType(type) {\n    return (!graphql_1.isSpecifiedScalarType(type) &&\n        !graphql_1.isIntrospectionType(type) &&\n        !types_1.isFederationType(type));\n}\nfunction printSchema(schema) {\n    const directives = schema\n        .getDirectives()\n        .filter(n => !isSpecifiedDirective(n));\n    const typeMap = schema.getTypeMap();\n    const types = Object.values(typeMap)\n        .sort((type1, type2) => type1.name.localeCompare(type2.name))\n        .filter(isDefinedType);\n    return ([printSchemaDefinition(schema)]\n        .concat(directives.map(directive => printDirective(directive)), types.map(type => printType(type)))\n        .filter(Boolean)\n        .join('\\n\\n') + '\\n');\n}\nexports.printSchema = printSchema;\nfunction printSchemaDefinition(schema) {\n    if (isSchemaOfCommonNames(schema)) {\n        return;\n    }\n    const operationTypes = [];\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        operationTypes.push(`  query: ${queryType.name}`);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        operationTypes.push(`  mutation: ${mutationType.name}`);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        operationTypes.push(`  subscription: ${subscriptionType.name}`);\n    }\n    return `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\nfunction isSchemaOfCommonNames(schema) {\n    const queryType = schema.getQueryType();\n    if (queryType && queryType.name !== 'Query') {\n        return false;\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType && mutationType.name !== 'Mutation') {\n        return false;\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType && subscriptionType.name !== 'Subscription') {\n        return false;\n    }\n    return true;\n}\nfunction printType(type) {\n    if (graphql_1.isScalarType(type)) {\n        return printScalar(type);\n    }\n    else if (graphql_1.isObjectType(type)) {\n        return printObject(type);\n    }\n    else if (graphql_1.isInterfaceType(type)) {\n        return printInterface(type);\n    }\n    else if (graphql_1.isUnionType(type)) {\n        return printUnion(type);\n    }\n    else if (graphql_1.isEnumType(type)) {\n        return printEnum(type);\n    }\n    else if (graphql_1.isInputObjectType(type)) {\n        return printInputObject(type);\n    }\n    throw new Error(`Unexpected type: \"${type}\".`);\n}\nfunction printScalar(type) {\n    return printDescription(type) + `scalar ${type.name}`;\n}\nfunction printFederationDirectives(type) {\n    if (!type.astNode)\n        return '';\n    if (graphql_1.isInputObjectType(type))\n        return '';\n    const directives = directives_1.gatherDirectives(type)\n        .filter(n => directives_1.default.some(fedDir => fedDir.name === n.name.value))\n        .map(graphql_1.print)\n        .join(' ');\n    return directives.length > 0 ? ' ' + directives : '';\n}\nfunction printObject(type) {\n    const interfaces = type.getInterfaces();\n    const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n    const implementedInterfaces = interfaces.length\n        ? ' implements ' + interfaces.map(i => i.name).join(' & ')\n        : '';\n    return (printDescription(type) +\n        `${isExtension ? 'extend ' : ''}type ${type.name}${implementedInterfaces}${printFederationDirectives(type)}` +\n        printFields(type));\n}\nfunction printInterface(type) {\n    const isExtension = type.extensionASTNodes && type.astNode && !type.astNode.fields;\n    return (printDescription(type) +\n        `${isExtension ? 'extend ' : ''}interface ${type.name}${printFederationDirectives(type)}` +\n        printFields(type));\n}\nfunction printUnion(type) {\n    const types = type.getTypes();\n    const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n    return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\nfunction printEnum(type) {\n    const values = type\n        .getValues()\n        .map(value => printDescription(value, '  ') +\n        '  ' +\n        value.name +\n        printDeprecated(value));\n    return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\nfunction printInputObject(type) {\n    const fields = Object.values(type.getFields()).map(f => printDescription(f, '  ') + '  ' + printInputValue(f));\n    return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\nfunction printFields(type) {\n    const fields = Object.values(type.getFields()).map(f => printDescription(f, '  ') +\n        '  ' +\n        f.name +\n        printArgs(f.args, '  ') +\n        ': ' +\n        String(f.type) +\n        printDeprecated(f) +\n        printFederationDirectives(f));\n    return printBlock(fields);\n}\nfunction printBlock(items) {\n    return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\nfunction printArgs(args, indentation = '') {\n    if (args.length === 0) {\n        return '';\n    }\n    if (args.every(arg => !arg.description)) {\n        return '(' + args.map(printInputValue).join(', ') + ')';\n    }\n    return ('(\\n' +\n        args\n            .map(arg => printDescription(arg, '  ' + indentation) +\n            '  ' +\n            indentation +\n            printInputValue(arg))\n            .join('\\n') +\n        '\\n' +\n        indentation +\n        ')');\n}\nfunction printInputValue(arg) {\n    const defaultAST = graphql_1.astFromValue(arg.defaultValue, arg.type);\n    let argDecl = arg.name + ': ' + String(arg.type);\n    if (defaultAST) {\n        argDecl += ` = ${graphql_1.print(defaultAST)}`;\n    }\n    return argDecl;\n}\nfunction printDirective(directive) {\n    return (printDescription(directive) +\n        'directive @' +\n        directive.name +\n        printArgs(directive.args) +\n        ' on ' +\n        directive.locations.join(' | '));\n}\nfunction printDeprecated(fieldOrEnumVal) {\n    if (!fieldOrEnumVal.isDeprecated) {\n        return '';\n    }\n    const reason = fieldOrEnumVal.deprecationReason;\n    const reasonAST = graphql_1.astFromValue(reason, graphql_1.GraphQLString);\n    if (reasonAST && reason !== '' && reason !== graphql_1.DEFAULT_DEPRECATION_REASON) {\n        return ' @deprecated(reason: ' + graphql_1.print(reasonAST) + ')';\n    }\n    return ' @deprecated';\n}\nfunction printDescription(def, indentation = '') {\n    if (def.description == null) {\n        return '';\n    }\n    const lines = descriptionLines(def.description, 120 - indentation.length);\n    if (lines.length === 1) {\n        return indentation + `\"${lines[0]}\"\\n`;\n    }\n    else {\n        return (indentation + ['\"\"\"', ...lines, '\"\"\"'].join('\\n' + indentation) + '\\n');\n    }\n}\nfunction descriptionLines(description, maxLen) {\n    const rawLines = description.split('\\n');\n    return rawLines.flatMap(line => {\n        if (line.length < maxLen + 5) {\n            return line;\n        }\n        return breakLine(line, maxLen);\n    });\n}\nfunction breakLine(line, maxLen) {\n    const parts = line.split(new RegExp(`((?: |^).{15,${maxLen - 40}}(?= |$))`));\n    if (parts.length < 4) {\n        return [line];\n    }\n    const sublines = [parts[0] + parts[1] + parts[2]];\n    for (let i = 3; i < parts.length; i += 2) {\n        sublines.push(parts[i].slice(1) + parts[i + 1]);\n    }\n    return sublines;\n}\n//# sourceMappingURL=printFederatedSchema.js.map"]},"metadata":{},"sourceType":"script"}