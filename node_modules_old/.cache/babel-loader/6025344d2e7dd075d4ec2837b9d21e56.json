{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = _interopRequireDefault(require(\"util.promisify\"));\n\nvar _child_process = _interopRequireDefault(require(\"child_process\"));\n\nvar _util2 = require(\"./util\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst exec = (0, _util.default)(_child_process.default.exec);\n/**\n * Checks out a commit given its repo and hash.\n *\n * Returns void. Throws error on failure.\n */\n\nconst checkoutCommit = async (pathToRepo, hash, options = {\n  force: false\n}) => {\n  const resolvedPath = (0, _util2.resolveHome)(pathToRepo);\n\n  try {\n    (0, _util2.validatePath)(resolvedPath);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  return exec(`git checkout ${hash} ${options.force ? '--force' : ''}`, {\n    cwd: resolvedPath\n  });\n};\n\nvar _default = checkoutCommit;\nexports.default = _default;","map":{"version":3,"sources":["../src/checkout_commit.js"],"names":["exec","childProcess","checkoutCommit","options","force","resolvedPath","Promise","hash","cwd"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;;;;;AAEA,MAAMA,IAAI,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAUC,cAAAA,CAAAA,OAAAA,CAAvB,IAAa,CAAb;AAEA;;;;;;AAKA,MAAMC,cAAc,GAAG,OAAA,UAAA,EAAA,IAAA,EAAyBC,OAAO,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAnC,KAAsD;AAC3E,QAAMC,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,WAAA,EAArB,UAAqB,CAArB;;AAEA,MAAI;AACF,KAAA,GAAA,MAAA,CAAA,YAAA,EAAA,YAAA;AADF,GAAA,CAEE,OAAA,CAAA,EAAU;AACV,WAAOC,OAAO,CAAPA,MAAAA,CAAP,CAAOA,CAAP;AACD;;AAED,SAAON,IAAI,CAAE,gBAAeO,IAAK,IAAGJ,OAAO,CAAPA,KAAAA,GAAAA,SAAAA,GAA4B,EAArD,EAAA,EAA2D;AACpEK,IAAAA,GAAG,EAAEH;AAD+D,GAA3D,CAAX;AATF,CAAA;;eAceH,c","sourcesContent":["import promisify from 'util.promisify';\nimport childProcess from 'child_process';\nimport {validatePath, resolveHome} from './util';\n\nconst exec = promisify(childProcess.exec);\n\n/**\n * Checks out a commit given its repo and hash.\n *\n * Returns void. Throws error on failure.\n */\nconst checkoutCommit = async (pathToRepo, hash, options = {force: false}) => {\n  const resolvedPath = resolveHome(pathToRepo);\n\n  try {\n    validatePath(resolvedPath);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n\n  return exec(`git checkout ${hash} ${options.force ? '--force' : ''}`, {\n    cwd: resolvedPath\n  });\n};\n\nexport default checkoutCommit;\n"]},"metadata":{},"sourceType":"script"}