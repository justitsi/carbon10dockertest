{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.executableDirectivesIdentical = void 0;\n\nrequire(\"apollo-server-env\");\n\nconst graphql_1 = require(\"graphql\");\n\nconst utils_1 = require(\"../../utils\");\n\nexports.executableDirectivesIdentical = ({\n  schema\n}) => {\n  const errors = [];\n  const customDirectives = schema.getDirectives().filter(x => !utils_1.isFederationDirective(x) && !graphql_1.isSpecifiedDirective(x));\n  customDirectives.forEach(directive => {\n    const directiveFederationMetadata = utils_1.getFederationMetadata(directive);\n    if (!directiveFederationMetadata) return;\n    const definitions = Object.entries(directiveFederationMetadata.directiveDefinitions);\n    const shouldError = definitions.some(([, definition], index) => {\n      if (index === 0) return;\n      const [, previousDefinition] = definitions[index - 1];\n      return !utils_1.typeNodesAreEquivalent(definition, previousDefinition);\n    });\n\n    if (shouldError) {\n      errors.push(utils_1.errorWithCode('EXECUTABLE_DIRECTIVES_IDENTICAL', utils_1.logDirective(directive.name) + `custom directives must be defined identically across all services. See below for a list of current implementations:\\n${definitions.map(([serviceName, definition]) => {\n        return `\\t${serviceName}: ${graphql_1.print(definition)}`;\n      }).join('\\n')}`));\n    }\n  });\n  return errors;\n};","map":{"version":3,"sources":["../../../../src/composition/validate/postComposition/executableDirectivesIdentical.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAea,OAAA,CAAA,6BAAA,GAA0D,CAAC;AACtE,EAAA;AADsE,CAAD,KAElE;AACH,QAAM,MAAM,GAAmB,EAA/B;AAEA,QAAM,gBAAgB,GAAG,MAAM,CAC5B,aADsB,GAEtB,MAFsB,CAEf,CAAC,IAAI,CAAC,OAAA,CAAA,qBAAA,CAAsB,CAAtB,CAAD,IAA6B,CAAC,SAAA,CAAA,oBAAA,CAAqB,CAArB,CAFpB,CAAzB;AAIA,EAAA,gBAAgB,CAAC,OAAjB,CAAyB,SAAS,IAAG;AACnC,UAAM,2BAA2B,GAAG,OAAA,CAAA,qBAAA,CAAsB,SAAtB,CAApC;AAEA,QAAI,CAAC,2BAAL,EAAkC;AAElC,UAAM,WAAW,GAAG,MAAM,CAAC,OAAP,CAClB,2BAA2B,CAAC,oBADV,CAApB;AAMA,UAAM,WAAW,GAAG,WAAW,CAAC,IAAZ,CAAiB,CAAC,GAAG,UAAH,CAAD,EAAiB,KAAjB,KAA0B;AAE7D,UAAI,KAAK,KAAK,CAAd,EAAiB;AACjB,YAAM,GAAG,kBAAH,IAAyB,WAAW,CAAC,KAAK,GAAG,CAAT,CAA1C;AACA,aAAO,CAAC,OAAA,CAAA,sBAAA,CAAuB,UAAvB,EAAmC,kBAAnC,CAAR;AACD,KALmB,CAApB;;AAOA,QAAI,WAAJ,EAAiB;AACf,MAAA,MAAM,CAAC,IAAP,CACE,OAAA,CAAA,aAAA,CACE,iCADF,EAEE,OAAA,CAAA,YAAA,CAAa,SAAS,CAAC,IAAvB,IACE,wHAAwH,WAAW,CAChI,GADqH,CACjH,CAAC,CAAC,WAAD,EAAc,UAAd,CAAD,KAA8B;AACjC,eAAO,KAAK,WAAW,KAAK,SAAA,CAAA,KAAA,CAAM,UAAN,CAAiB,EAA7C;AACD,OAHqH,EAIrH,IAJqH,CAIhH,IAJgH,CAI3G,EAPjB,CADF;AAWD;AACF,GA/BD;AAgCA,SAAO,MAAP;AACD,CA1CY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.executableDirectivesIdentical = void 0;\nrequire(\"apollo-server-env\");\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"../../utils\");\nexports.executableDirectivesIdentical = ({ schema, }) => {\n    const errors = [];\n    const customDirectives = schema\n        .getDirectives()\n        .filter(x => !utils_1.isFederationDirective(x) && !graphql_1.isSpecifiedDirective(x));\n    customDirectives.forEach(directive => {\n        const directiveFederationMetadata = utils_1.getFederationMetadata(directive);\n        if (!directiveFederationMetadata)\n            return;\n        const definitions = Object.entries(directiveFederationMetadata.directiveDefinitions);\n        const shouldError = definitions.some(([, definition], index) => {\n            if (index === 0)\n                return;\n            const [, previousDefinition] = definitions[index - 1];\n            return !utils_1.typeNodesAreEquivalent(definition, previousDefinition);\n        });\n        if (shouldError) {\n            errors.push(utils_1.errorWithCode('EXECUTABLE_DIRECTIVES_IDENTICAL', utils_1.logDirective(directive.name) +\n                `custom directives must be defined identically across all services. See below for a list of current implementations:\\n${definitions\n                    .map(([serviceName, definition]) => {\n                    return `\\t${serviceName}: ${graphql_1.print(definition)}`;\n                })\n                    .join('\\n')}`));\n        }\n    });\n    return errors;\n};\n//# sourceMappingURL=executableDirectivesIdentical.js.map"]},"metadata":{},"sourceType":"script"}