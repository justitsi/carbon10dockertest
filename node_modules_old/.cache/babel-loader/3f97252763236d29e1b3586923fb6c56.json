{"ast":null,"code":"\"use strict\"; // tslint:disable interface-over-type-literal\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst args = tslib_1.__importStar(require(\"./args\"));\n\nexports.args = args;\n\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\n\nconst flags = tslib_1.__importStar(require(\"./flags\"));\n\nexports.flags = flags;\n\nconst parse_1 = require(\"./parse\");\n\nvar help_1 = require(\"./help\");\n\nexports.flagUsages = help_1.flagUsages; // eslint-disable-next-line new-cap\n\nconst m = deps_1.default() // eslint-disable-next-line node/no-missing-require\n.add('validate', () => require('./validate').validate);\n\nfunction parse(argv, options) {\n  const input = {\n    argv,\n    context: options.context,\n    args: (options.args || []).map(a => args.newArg(a)),\n    '--': options['--'],\n    flags: Object.assign({\n      color: flags.defaultFlags.color\n    }, options.flags || {}),\n    strict: options.strict !== false\n  };\n  const parser = new parse_1.Parser(input);\n  const output = parser.parse();\n  m.validate({\n    input,\n    output\n  });\n  return output;\n}\n\nexports.parse = parse;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/parser/lib/index.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","args","__importStar","deps_1","__importDefault","flags","parse_1","help_1","flagUsages","m","default","add","validate","parse","argv","options","input","context","map","a","newArg","assign","color","defaultFlags","strict","parser","Parser","output"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,QAAD,CAA5B,CAAb;;AACAH,OAAO,CAACI,IAAR,GAAeA,IAAf;;AACA,MAAME,MAAM,GAAGJ,OAAO,CAACK,eAAR,CAAwBJ,OAAO,CAAC,QAAD,CAA/B,CAAf;;AACA,MAAMK,KAAK,GAAGN,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,SAAD,CAA5B,CAAd;;AACAH,OAAO,CAACQ,KAAR,GAAgBA,KAAhB;;AACA,MAAMC,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAIO,MAAM,GAAGP,OAAO,CAAC,QAAD,CAApB;;AACAH,OAAO,CAACW,UAAR,GAAqBD,MAAM,CAACC,UAA5B,C,CACA;;AACA,MAAMC,CAAC,GAAGN,MAAM,CAACO,OAAP,GACN;AADM,CAELC,GAFK,CAED,UAFC,EAEW,MAAMX,OAAO,CAAC,YAAD,CAAP,CAAsBY,QAFvC,CAAV;;AAGA,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1B,QAAMC,KAAK,GAAG;AACVF,IAAAA,IADU;AAEVG,IAAAA,OAAO,EAAEF,OAAO,CAACE,OAFP;AAGVhB,IAAAA,IAAI,EAAE,CAACc,OAAO,CAACd,IAAR,IAAgB,EAAjB,EAAqBiB,GAArB,CAA0BC,CAAD,IAAOlB,IAAI,CAACmB,MAAL,CAAYD,CAAZ,CAAhC,CAHI;AAIV,UAAMJ,OAAO,CAAC,IAAD,CAJH;AAKVV,IAAAA,KAAK,EAAEV,MAAM,CAAC0B,MAAP,CAAc;AAAEC,MAAAA,KAAK,EAAEjB,KAAK,CAACkB,YAAN,CAAmBD;AAA5B,KAAd,EAAqDP,OAAO,CAACV,KAAR,IAAiB,EAAtE,CALG;AAMVmB,IAAAA,MAAM,EAAET,OAAO,CAACS,MAAR,KAAmB;AANjB,GAAd;AAQA,QAAMC,MAAM,GAAG,IAAInB,OAAO,CAACoB,MAAZ,CAAmBV,KAAnB,CAAf;AACA,QAAMW,MAAM,GAAGF,MAAM,CAACZ,KAAP,EAAf;AACAJ,EAAAA,CAAC,CAACG,QAAF,CAAW;AAAEI,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAX;AACA,SAAOA,MAAP;AACH;;AACD9B,OAAO,CAACgB,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\n// tslint:disable interface-over-type-literal\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst args = tslib_1.__importStar(require(\"./args\"));\nexports.args = args;\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\nconst flags = tslib_1.__importStar(require(\"./flags\"));\nexports.flags = flags;\nconst parse_1 = require(\"./parse\");\nvar help_1 = require(\"./help\");\nexports.flagUsages = help_1.flagUsages;\n// eslint-disable-next-line new-cap\nconst m = deps_1.default()\n    // eslint-disable-next-line node/no-missing-require\n    .add('validate', () => require('./validate').validate);\nfunction parse(argv, options) {\n    const input = {\n        argv,\n        context: options.context,\n        args: (options.args || []).map((a) => args.newArg(a)),\n        '--': options['--'],\n        flags: Object.assign({ color: flags.defaultFlags.color }, ((options.flags || {}))),\n        strict: options.strict !== false,\n    };\n    const parser = new parse_1.Parser(input);\n    const output = parser.parse();\n    m.validate({ input, output });\n    return output;\n}\nexports.parse = parse;\n"]},"metadata":{},"sourceType":"script"}