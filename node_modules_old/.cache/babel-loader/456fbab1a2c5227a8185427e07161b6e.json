{"ast":null,"code":"var common = require('./common');\n\ncommon.register('echo', _echo, {\n  allowGlobbing: false\n}); //@\n//@ ### echo([options,] string [, string ...])\n//@ Available options:\n//@\n//@ + `-e`: interpret backslash escapes (default)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo('hello world');\n//@ var str = echo('hello world');\n//@ ```\n//@\n//@ Prints string to stdout, and returns string with additional utility methods\n//@ like `.to()`.\n\nfunction _echo(opts, messages) {\n  // allow strings starting with '-', see issue #20\n  messages = [].slice.call(arguments, opts ? 0 : 1);\n\n  if (messages[0] === '-e') {\n    // ignore -e\n    messages.shift();\n  }\n\n  console.log.apply(console, messages);\n  return messages.join(' ');\n}\n\nmodule.exports = _echo;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/shelljs/src/echo.js"],"names":["common","require","register","_echo","allowGlobbing","opts","messages","slice","call","arguments","shift","console","log","apply","join","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEAD,MAAM,CAACE,QAAP,CAAgB,MAAhB,EAAwBC,KAAxB,EAA+B;AAC7BC,EAAAA,aAAa,EAAE;AADc,CAA/B,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,KAAT,CAAeE,IAAf,EAAqBC,QAArB,EAA+B;AAC7B;AACAA,EAAAA,QAAQ,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyBJ,IAAI,GAAG,CAAH,GAAO,CAApC,CAAX;;AAEA,MAAIC,QAAQ,CAAC,CAAD,CAAR,KAAgB,IAApB,EAA0B;AACxB;AACAA,IAAAA,QAAQ,CAACI,KAAT;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAkBF,OAAlB,EAA2BL,QAA3B;AACA,SAAOA,QAAQ,CAACQ,IAAT,CAAc,GAAd,CAAP;AACD;;AACDC,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["var common = require('./common');\n\ncommon.register('echo', _echo, {\n  allowGlobbing: false,\n});\n\n//@\n//@ ### echo([options,] string [, string ...])\n//@ Available options:\n//@\n//@ + `-e`: interpret backslash escapes (default)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo('hello world');\n//@ var str = echo('hello world');\n//@ ```\n//@\n//@ Prints string to stdout, and returns string with additional utility methods\n//@ like `.to()`.\nfunction _echo(opts, messages) {\n  // allow strings starting with '-', see issue #20\n  messages = [].slice.call(arguments, opts ? 0 : 1);\n\n  if (messages[0] === '-e') {\n    // ignore -e\n    messages.shift();\n  }\n\n  console.log.apply(console, messages);\n  return messages.join(' ');\n}\nmodule.exports = _echo;\n"]},"metadata":{},"sourceType":"script"}