{"ast":null,"code":"// https://developer.github.com/actions/creating-github-actions/accessing-the-runtime-environment/#environment-variables\nconst parseBranch = branch => (/refs\\/heads\\/(.*)/i.exec(branch) || [])[1];\n\nconst getPrEvent = ({\n  env\n}) => {\n  try {\n    const event = env.GITHUB_EVENT_PATH ? require(env.GITHUB_EVENT_PATH) : undefined;\n\n    if (event && event.pull_request) {\n      return {\n        branch: event.pull_request.base ? parseBranch(event.pull_request.base.ref) : undefined,\n        pr: event.pull_request.number\n      };\n    }\n  } catch (error) {// Noop\n  }\n\n  return {\n    pr: undefined,\n    branch: undefined\n  };\n};\n\nmodule.exports = {\n  detect({\n    env\n  }) {\n    return Boolean(env.GITHUB_ACTION);\n  },\n\n  configuration({\n    env,\n    cwd\n  }) {\n    const isPr = env.GITHUB_EVENT_NAME === 'pull_request';\n    const branch = parseBranch(env.GITHUB_REF);\n    return Object.assign({\n      name: 'GitHub Actions',\n      service: 'github',\n      commit: env.GITHUB_SHA,\n      isPr,\n      branch,\n      prBranch: isPr ? branch : undefined,\n      slug: env.GITHUB_REPOSITORY,\n      root: env.GITHUB_WORKSPACE\n    }, isPr ? getPrEvent({\n      env,\n      cwd\n    }) : undefined);\n  }\n\n};","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/env-ci/services/github.js"],"names":["parseBranch","branch","exec","getPrEvent","env","event","GITHUB_EVENT_PATH","require","undefined","pull_request","base","ref","pr","number","error","module","exports","detect","Boolean","GITHUB_ACTION","configuration","cwd","isPr","GITHUB_EVENT_NAME","GITHUB_REF","Object","assign","name","service","commit","GITHUB_SHA","prBranch","slug","GITHUB_REPOSITORY","root","GITHUB_WORKSPACE"],"mappings":"AAAA;AAEA,MAAMA,WAAW,GAAGC,MAAM,IAAI,CAAC,qBAAqBC,IAArB,CAA0BD,MAA1B,KAAqC,EAAtC,EAA0C,CAA1C,CAA9B;;AAEA,MAAME,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC7B,MAAI;AACH,UAAMC,KAAK,GAAGD,GAAG,CAACE,iBAAJ,GAAwBC,OAAO,CAACH,GAAG,CAACE,iBAAL,CAA/B,GAAyDE,SAAvE;;AAEA,QAAIH,KAAK,IAAIA,KAAK,CAACI,YAAnB,EAAiC;AAChC,aAAO;AACNR,QAAAA,MAAM,EAAEI,KAAK,CAACI,YAAN,CAAmBC,IAAnB,GAA0BV,WAAW,CAACK,KAAK,CAACI,YAAN,CAAmBC,IAAnB,CAAwBC,GAAzB,CAArC,GAAqEH,SADvE;AAENI,QAAAA,EAAE,EAAEP,KAAK,CAACI,YAAN,CAAmBI;AAFjB,OAAP;AAIA;AACD,GATD,CASE,OAAOC,KAAP,EAAc,CACf;AACA;;AAED,SAAO;AAACF,IAAAA,EAAE,EAAEJ,SAAL;AAAgBP,IAAAA,MAAM,EAAEO;AAAxB,GAAP;AACA,CAfD;;AAiBAO,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,MAAM,CAAC;AAACb,IAAAA;AAAD,GAAD,EAAQ;AACb,WAAOc,OAAO,CAACd,GAAG,CAACe,aAAL,CAAd;AACA,GAHe;;AAIhBC,EAAAA,aAAa,CAAC;AAAChB,IAAAA,GAAD;AAAMiB,IAAAA;AAAN,GAAD,EAAa;AACzB,UAAMC,IAAI,GAAGlB,GAAG,CAACmB,iBAAJ,KAA0B,cAAvC;AACA,UAAMtB,MAAM,GAAGD,WAAW,CAACI,GAAG,CAACoB,UAAL,CAA1B;AAEA,WAAOC,MAAM,CAACC,MAAP,CACN;AACCC,MAAAA,IAAI,EAAE,gBADP;AAECC,MAAAA,OAAO,EAAE,QAFV;AAGCC,MAAAA,MAAM,EAAEzB,GAAG,CAAC0B,UAHb;AAICR,MAAAA,IAJD;AAKCrB,MAAAA,MALD;AAMC8B,MAAAA,QAAQ,EAAET,IAAI,GAAGrB,MAAH,GAAYO,SAN3B;AAOCwB,MAAAA,IAAI,EAAE5B,GAAG,CAAC6B,iBAPX;AAQCC,MAAAA,IAAI,EAAE9B,GAAG,CAAC+B;AARX,KADM,EAWNb,IAAI,GAAGnB,UAAU,CAAC;AAACC,MAAAA,GAAD;AAAMiB,MAAAA;AAAN,KAAD,CAAb,GAA4Bb,SAX1B,CAAP;AAaA;;AArBe,CAAjB","sourcesContent":["// https://developer.github.com/actions/creating-github-actions/accessing-the-runtime-environment/#environment-variables\n\nconst parseBranch = branch => (/refs\\/heads\\/(.*)/i.exec(branch) || [])[1];\n\nconst getPrEvent = ({env}) => {\n\ttry {\n\t\tconst event = env.GITHUB_EVENT_PATH ? require(env.GITHUB_EVENT_PATH) : undefined;\n\n\t\tif (event && event.pull_request) {\n\t\t\treturn {\n\t\t\t\tbranch: event.pull_request.base ? parseBranch(event.pull_request.base.ref) : undefined,\n\t\t\t\tpr: event.pull_request.number,\n\t\t\t};\n\t\t}\n\t} catch (error) {\n\t\t// Noop\n\t}\n\n\treturn {pr: undefined, branch: undefined};\n};\n\nmodule.exports = {\n\tdetect({env}) {\n\t\treturn Boolean(env.GITHUB_ACTION);\n\t},\n\tconfiguration({env, cwd}) {\n\t\tconst isPr = env.GITHUB_EVENT_NAME === 'pull_request';\n\t\tconst branch = parseBranch(env.GITHUB_REF);\n\n\t\treturn Object.assign(\n\t\t\t{\n\t\t\t\tname: 'GitHub Actions',\n\t\t\t\tservice: 'github',\n\t\t\t\tcommit: env.GITHUB_SHA,\n\t\t\t\tisPr,\n\t\t\t\tbranch,\n\t\t\t\tprBranch: isPr ? branch : undefined,\n\t\t\t\tslug: env.GITHUB_REPOSITORY,\n\t\t\t\troot: env.GITHUB_WORKSPACE,\n\t\t\t},\n\t\t\tisPr ? getPrEvent({env, cwd}) : undefined\n\t\t);\n\t},\n};\n"]},"metadata":{},"sourceType":"script"}