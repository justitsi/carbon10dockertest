{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _child_process = _interopRequireDefault(require(\"child_process\"));\n\nvar _git_log_format_markers = require(\"./constants/git_log_format_markers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst gitLogFormatString = `${_git_log_format_markers.gitLogCommitMarker}%n%H%n%an%n%ae%n%aD%n${_git_log_format_markers.gitLogMessageMarker}%n%B%n${_git_log_format_markers.gitLogFileMarker}`;\n/*\n  Returns a stream of git log data from a git repository\n*/\n\nconst gitLogStream = (pathToRepo, options = {}) => {\n  const sinceCommit = options.sinceCommit ? `${options.sinceCommit}..HEAD` : '';\n  const gitParams = ['log', `--pretty=format:${gitLogFormatString}`, '--name-status', sinceCommit, '--', './*', ':!node_modules'].filter(elt => elt !== '');\n\n  const gitProcess = _child_process.default.spawn('git', gitParams, {\n    cwd: pathToRepo\n  });\n\n  const errorHandlers = [];\n  gitProcess.on('error', e => errorHandlers.forEach(handler => handler(e)));\n  return {\n    stream: gitProcess.stdout,\n    addErrorHandler: fn => errorHandlers.push(fn)\n  };\n};\n\nvar _default = gitLogStream;\nexports.default = _default;","map":{"version":3,"sources":["../src/git_log_stream.js"],"names":["gitLogFormatString","gitLogCommitMarker","gitLogMessageMarker","gitLogFileMarker","gitLogStream","options","sinceCommit","gitParams","elt","gitProcess","cwd","pathToRepo","errorHandlers","e","handler","stream","addErrorHandler","fn"],"mappings":";;;;;;;AAAA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;;;;;;;;AAMA,MAAMA,kBAAkB,GAAI,GAAEC,uBAAAA,CAAAA,kBAAmB,wBAAuBC,uBAAAA,CAAAA,mBAAoB,SAAQC,uBAAAA,CAAAA,gBAApG,EAAA;AAEA;;;;AAGA,MAAMC,YAAY,GAAG,CAAA,UAAA,EAAaC,OAAO,GAApB,EAAA,KAA8B;AACjD,QAAMC,WAAW,GAAGD,OAAO,CAAPA,WAAAA,GAAuB,GAAEA,OAAO,CAACC,WAAjCD,QAAAA,GAApB,EAAA;AACA,QAAME,SAAS,GAAG,CAAA,KAAA,EAEf,mBAAkBP,kBAFH,EAAA,EAAA,eAAA,EAAA,WAAA,EAAA,IAAA,EAAA,KAAA,EAAA,gBAAA,EAAA,MAAA,CAQTQ,GAAG,IAAIA,GAAG,KARnB,EAAkB,CAAlB;;AAUA,QAAMC,UAAU,GAAG,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,EAAA,SAAA,EAAqC;AAACC,IAAAA,GAAG,EAAEC;AAAN,GAArC,CAAnB;;AACA,QAAMC,aAAa,GAAnB,EAAA;AACAH,EAAAA,UAAU,CAAVA,EAAAA,CAAAA,OAAAA,EAAuBI,CAAC,IAAID,aAAa,CAAbA,OAAAA,CAAsBE,OAAO,IAAIA,OAAO,CAApEL,CAAoE,CAAxCG,CAA5BH;AACA,SAAO;AACLM,IAAAA,MAAM,EAAEN,UAAU,CADb,MAAA;AAELO,IAAAA,eAAe,EAAEC,EAAE,IAAIL,aAAa,CAAbA,IAAAA,CAAAA,EAAAA;AAFlB,GAAP;AAfF,CAAA;;eAqBeR,Y","sourcesContent":["import childProcess from 'child_process';\nimport {\n  gitLogCommitMarker,\n  gitLogMessageMarker,\n  gitLogFileMarker\n} from './constants/git_log_format_markers';\n\nconst gitLogFormatString = `${gitLogCommitMarker}%n%H%n%an%n%ae%n%aD%n${gitLogMessageMarker}%n%B%n${gitLogFileMarker}`;\n\n/*\n  Returns a stream of git log data from a git repository\n*/\nconst gitLogStream = (pathToRepo, options = {}) => {\n  const sinceCommit = options.sinceCommit ? `${options.sinceCommit}..HEAD` : '';\n  const gitParams = [\n    'log',\n    `--pretty=format:${gitLogFormatString}`,\n    '--name-status',\n    sinceCommit,\n    '--',\n    './*',\n    ':!node_modules'\n  ].filter(elt => elt !== '');\n\n  const gitProcess = childProcess.spawn('git', gitParams, {cwd: pathToRepo});\n  const errorHandlers = [];\n  gitProcess.on('error', e => errorHandlers.forEach(handler => handler(e)));\n  return {\n    stream: gitProcess.stdout,\n    addErrorHandler: fn => errorHandlers.push(fn)\n  };\n};\n\nexport default gitLogStream;\n"]},"metadata":{},"sourceType":"script"}