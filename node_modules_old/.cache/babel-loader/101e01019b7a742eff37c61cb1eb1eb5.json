{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\")); // eslint-disable-next-line new-cap\n\n\nconst m = deps_1.default().add('chalk', () => require('chalk')) // eslint-disable-next-line node/no-missing-require\n.add('util', () => require('./util'));\n\nfunction flagUsage(flag, options = {}) {\n  const label = [];\n\n  if (flag.helpLabel) {\n    label.push(flag.helpLabel);\n  } else {\n    if (flag.char) label.push(`-${flag.char}`);\n    if (flag.name) label.push(` --${flag.name}`);\n  }\n\n  const usage = flag.type === 'option' ? ` ${flag.name.toUpperCase()}` : '';\n  let description = flag.description || '';\n  if (options.displayRequired && flag.required) description = `(required) ${description}`;\n  description = description ? m.chalk.dim(description) : undefined;\n  return [` ${label.join(',').trim()}${usage}`, description];\n}\n\nexports.flagUsage = flagUsage;\n\nfunction flagUsages(flags, options = {}) {\n  if (flags.length === 0) return [];\n  const {\n    sortBy\n  } = m.util;\n  return sortBy(flags, f => [f.char ? -1 : 1, f.char, f.name]).map(f => flagUsage(f, options));\n}\n\nexports.flagUsages = flagUsages;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/parser/lib/help.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","deps_1","__importDefault","m","default","add","flagUsage","flag","options","label","helpLabel","push","char","name","usage","type","toUpperCase","description","displayRequired","required","chalk","dim","undefined","join","trim","flagUsages","flags","length","sortBy","util","f","map"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,eAAR,CAAwBF,OAAO,CAAC,QAAD,CAA/B,CAAf,C,CACA;;;AACA,MAAMG,CAAC,GAAGF,MAAM,CAACG,OAAP,GACLC,GADK,CACD,OADC,EACQ,MAAML,OAAO,CAAC,OAAD,CADrB,EAEN;AAFM,CAGLK,GAHK,CAGD,MAHC,EAGO,MAAML,OAAO,CAAC,QAAD,CAHpB,CAAV;;AAIA,SAASM,SAAT,CAAmBC,IAAnB,EAAyBC,OAAO,GAAG,EAAnC,EAAuC;AACnC,QAAMC,KAAK,GAAG,EAAd;;AACA,MAAIF,IAAI,CAACG,SAAT,EAAoB;AAChBD,IAAAA,KAAK,CAACE,IAAN,CAAWJ,IAAI,CAACG,SAAhB;AACH,GAFD,MAGK;AACD,QAAIH,IAAI,CAACK,IAAT,EACIH,KAAK,CAACE,IAAN,CAAY,IAAGJ,IAAI,CAACK,IAAK,EAAzB;AACJ,QAAIL,IAAI,CAACM,IAAT,EACIJ,KAAK,CAACE,IAAN,CAAY,MAAKJ,IAAI,CAACM,IAAK,EAA3B;AACP;;AACD,QAAMC,KAAK,GAAGP,IAAI,CAACQ,IAAL,KAAc,QAAd,GAA0B,IAAGR,IAAI,CAACM,IAAL,CAAUG,WAAV,EAAwB,EAArD,GAAyD,EAAvE;AACA,MAAIC,WAAW,GAAGV,IAAI,CAACU,WAAL,IAAoB,EAAtC;AACA,MAAIT,OAAO,CAACU,eAAR,IAA2BX,IAAI,CAACY,QAApC,EACIF,WAAW,GAAI,cAAaA,WAAY,EAAxC;AACJA,EAAAA,WAAW,GAAGA,WAAW,GAAGd,CAAC,CAACiB,KAAF,CAAQC,GAAR,CAAYJ,WAAZ,CAAH,GAA8BK,SAAvD;AACA,SAAO,CAAE,IAAGb,KAAK,CAACc,IAAN,CAAW,GAAX,EAAgBC,IAAhB,EAAuB,GAAEV,KAAM,EAApC,EAAuCG,WAAvC,CAAP;AACH;;AACDpB,OAAO,CAACS,SAAR,GAAoBA,SAApB;;AACA,SAASmB,UAAT,CAAoBC,KAApB,EAA2BlB,OAAO,GAAG,EAArC,EAAyC;AACrC,MAAIkB,KAAK,CAACC,MAAN,KAAiB,CAArB,EACI,OAAO,EAAP;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAazB,CAAC,CAAC0B,IAArB;AACA,SAAOD,MAAM,CAACF,KAAD,EAAQI,CAAC,IAAI,CAACA,CAAC,CAAClB,IAAF,GAAS,CAAC,CAAV,GAAc,CAAf,EAAkBkB,CAAC,CAAClB,IAApB,EAA0BkB,CAAC,CAACjB,IAA5B,CAAb,CAAN,CACFkB,GADE,CACED,CAAC,IAAIxB,SAAS,CAACwB,CAAD,EAAItB,OAAJ,CADhB,CAAP;AAEH;;AACDX,OAAO,CAAC4B,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\n// eslint-disable-next-line new-cap\nconst m = deps_1.default()\n    .add('chalk', () => require('chalk'))\n    // eslint-disable-next-line node/no-missing-require\n    .add('util', () => require('./util'));\nfunction flagUsage(flag, options = {}) {\n    const label = [];\n    if (flag.helpLabel) {\n        label.push(flag.helpLabel);\n    }\n    else {\n        if (flag.char)\n            label.push(`-${flag.char}`);\n        if (flag.name)\n            label.push(` --${flag.name}`);\n    }\n    const usage = flag.type === 'option' ? ` ${flag.name.toUpperCase()}` : '';\n    let description = flag.description || '';\n    if (options.displayRequired && flag.required)\n        description = `(required) ${description}`;\n    description = description ? m.chalk.dim(description) : undefined;\n    return [` ${label.join(',').trim()}${usage}`, description];\n}\nexports.flagUsage = flagUsage;\nfunction flagUsages(flags, options = {}) {\n    if (flags.length === 0)\n        return [];\n    const { sortBy } = m.util;\n    return sortBy(flags, f => [f.char ? -1 : 1, f.char, f.name])\n        .map(f => flagUsage(f, options));\n}\nexports.flagUsages = flagUsages;\n"]},"metadata":{},"sourceType":"script"}