{"ast":null,"code":"\"use strict\"; // tslint:disable restrict-plus-operands\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst chalk_1 = tslib_1.__importDefault(require(\"chalk\"));\n\nconst supportsColor = tslib_1.__importStar(require(\"supports-color\"));\n\nconst deps_1 = tslib_1.__importDefault(require(\"../deps\"));\n\nconst base_1 = require(\"./base\");\n/* eslint-disable-next-line node/no-missing-require */\n\n\nconst spinners = require('./spinners');\n\nfunction color(s) {\n  if (!supportsColor) return s;\n  const has256 = supportsColor.stdout.has256 || (process.env.TERM || '').indexOf('256') !== -1;\n  return has256 ? `\\u001B[38;5;104m${s}${deps_1.default.ansiStyles.reset.open}` : chalk_1.default.magenta(s);\n}\n\nclass SpinnerAction extends base_1.ActionBase {\n  constructor() {\n    super();\n    this.type = 'spinner';\n    this.frames = spinners[process.platform === 'win32' ? 'line' : 'dots2'].frames;\n    this.frameIndex = 0;\n  }\n\n  _start() {\n    this._reset();\n\n    if (this.spinner) clearInterval(this.spinner);\n\n    this._render();\n\n    this.spinner = setInterval(icon => this._render.bind(this)(icon), process.platform === 'win32' ? 500 : 100, 'spinner');\n    const interval = this.spinner;\n    interval.unref();\n  }\n\n  _stop(status) {\n    if (this.task) this.task.status = status;\n    if (this.spinner) clearInterval(this.spinner);\n\n    this._render();\n\n    this.output = undefined;\n  }\n\n  _pause(icon) {\n    if (this.spinner) clearInterval(this.spinner);\n\n    this._reset();\n\n    if (icon) this._render(` ${icon}`);\n    this.output = undefined;\n  }\n\n  _frame() {\n    const frame = this.frames[this.frameIndex];\n    this.frameIndex = ++this.frameIndex % this.frames.length;\n    return color(frame);\n  }\n\n  _render(icon) {\n    const task = this.task;\n    if (!task) return;\n\n    this._reset();\n\n    this._flushStdout();\n\n    const frame = icon === 'spinner' ? ` ${this._frame()}` : icon || '';\n    const status = task.status ? ` ${task.status}` : '';\n    this.output = `${task.action}...${frame}${status}\\n`;\n\n    this._write(this.std, this.output);\n  }\n\n  _reset() {\n    if (!this.output) return;\n\n    const lines = this._lines(this.output);\n\n    this._write(this.std, deps_1.default.ansiEscapes.cursorLeft + deps_1.default.ansiEscapes.cursorUp(lines) + deps_1.default.ansiEscapes.eraseDown);\n\n    this.output = undefined;\n  }\n\n  _lines(s) {\n    return deps_1.default.stripAnsi(s).split('\\n').map(l => Math.ceil(l.length / deps_1.default.screen.errtermwidth)).reduce((c, i) => c + i, 0);\n  }\n\n}\n\nexports.default = SpinnerAction;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/cli-ux/lib/action/spinner.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","chalk_1","__importDefault","supportsColor","__importStar","deps_1","base_1","spinners","color","s","has256","stdout","process","env","TERM","indexOf","default","ansiStyles","reset","open","magenta","SpinnerAction","ActionBase","constructor","type","frames","platform","frameIndex","_start","_reset","spinner","clearInterval","_render","setInterval","icon","bind","interval","unref","_stop","status","task","output","undefined","_pause","_frame","frame","length","_flushStdout","action","_write","std","lines","_lines","ansiEscapes","cursorLeft","cursorUp","eraseDown","stripAnsi","split","map","l","Math","ceil","screen","errtermwidth","reduce","c","i"],"mappings":"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","sourcesContent":["\"use strict\";\n// tslint:disable restrict-plus-operands\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst chalk_1 = tslib_1.__importDefault(require(\"chalk\"));\nconst supportsColor = tslib_1.__importStar(require(\"supports-color\"));\nconst deps_1 = tslib_1.__importDefault(require(\"../deps\"));\nconst base_1 = require(\"./base\");\n/* eslint-disable-next-line node/no-missing-require */\nconst spinners = require('./spinners');\nfunction color(s) {\n    if (!supportsColor)\n        return s;\n    const has256 = supportsColor.stdout.has256 || (process.env.TERM || '').indexOf('256') !== -1;\n    return has256 ? `\\u001B[38;5;104m${s}${deps_1.default.ansiStyles.reset.open}` : chalk_1.default.magenta(s);\n}\nclass SpinnerAction extends base_1.ActionBase {\n    constructor() {\n        super();\n        this.type = 'spinner';\n        this.frames = spinners[process.platform === 'win32' ? 'line' : 'dots2'].frames;\n        this.frameIndex = 0;\n    }\n    _start() {\n        this._reset();\n        if (this.spinner)\n            clearInterval(this.spinner);\n        this._render();\n        this.spinner = setInterval(icon => this._render.bind(this)(icon), process.platform === 'win32' ? 500 : 100, 'spinner');\n        const interval = this.spinner;\n        interval.unref();\n    }\n    _stop(status) {\n        if (this.task)\n            this.task.status = status;\n        if (this.spinner)\n            clearInterval(this.spinner);\n        this._render();\n        this.output = undefined;\n    }\n    _pause(icon) {\n        if (this.spinner)\n            clearInterval(this.spinner);\n        this._reset();\n        if (icon)\n            this._render(` ${icon}`);\n        this.output = undefined;\n    }\n    _frame() {\n        const frame = this.frames[this.frameIndex];\n        this.frameIndex = ++this.frameIndex % this.frames.length;\n        return color(frame);\n    }\n    _render(icon) {\n        const task = this.task;\n        if (!task)\n            return;\n        this._reset();\n        this._flushStdout();\n        const frame = icon === 'spinner' ? ` ${this._frame()}` : icon || '';\n        const status = task.status ? ` ${task.status}` : '';\n        this.output = `${task.action}...${frame}${status}\\n`;\n        this._write(this.std, this.output);\n    }\n    _reset() {\n        if (!this.output)\n            return;\n        const lines = this._lines(this.output);\n        this._write(this.std, deps_1.default.ansiEscapes.cursorLeft + deps_1.default.ansiEscapes.cursorUp(lines) + deps_1.default.ansiEscapes.eraseDown);\n        this.output = undefined;\n    }\n    _lines(s) {\n        return deps_1.default\n            .stripAnsi(s)\n            .split('\\n')\n            .map(l => Math.ceil(l.length / deps_1.default.screen.errtermwidth))\n            .reduce((c, i) => c + i, 0);\n    }\n}\nexports.default = SpinnerAction;\n"]},"metadata":{},"sourceType":"script"}