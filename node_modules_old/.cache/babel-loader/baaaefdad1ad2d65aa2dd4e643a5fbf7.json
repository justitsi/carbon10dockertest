{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst errors_1 = require(\"@oclif/errors\");\n\nconst chalk_1 = require(\"chalk\");\n\nconst indent = require(\"indent-string\");\n\nconst stripAnsi = require(\"strip-ansi\");\n\nconst command_1 = require(\"./command\");\n\nconst list_1 = require(\"./list\");\n\nconst root_1 = require(\"./root\");\n\nconst screen_1 = require(\"./screen\");\n\nconst util_1 = require(\"./util\");\n\nconst util_2 = require(\"./util\");\n\nexports.getHelpClass = util_2.getHelpClass;\n\nconst wrap = require('wrap-ansi');\n\nconst {\n  bold\n} = chalk_1.default;\n\nfunction getHelpSubject(args) {\n  for (const arg of args) {\n    if (arg === '--') return;\n    if (arg.startsWith('-')) continue;\n    if (arg === 'help') continue;\n    return arg;\n  }\n}\n\nclass HelpBase {\n  constructor(config, opts = {}) {\n    this.config = config;\n    this.opts = Object.assign({\n      maxWidth: screen_1.stdtermwidth\n    }, opts);\n  }\n\n}\n\nexports.HelpBase = HelpBase;\n\nclass Help extends HelpBase {\n  constructor(config, opts = {}) {\n    super(config, opts);\n    this.render = util_1.template(this);\n  }\n  /*\n   * _topics is to work around Config.topics mistakenly including commands that do\n   * not have children, as well as topics. A topic has children, either commands or other topics. When\n   * this is fixed upstream config.topics should return *only* topics with children,\n   * and this can be removed.\n   */\n\n\n  get _topics() {\n    return this.config.topics.filter(topic => {\n      // it is assumed a topic has a child if it has children\n      const hasChild = this.config.topics.some(subTopic => subTopic.name.includes(`${topic.name}:`));\n      return hasChild;\n    });\n  }\n\n  get sortedCommands() {\n    let commands = this.config.commands;\n    commands = commands.filter(c => this.opts.all || !c.hidden);\n    commands = util_1.sortBy(commands, c => c.id);\n    commands = util_1.uniqBy(commands, c => c.id);\n    return commands;\n  }\n\n  get sortedTopics() {\n    let topics = this._topics;\n    topics = topics.filter(t => this.opts.all || !t.hidden);\n    topics = util_1.sortBy(topics, t => t.name);\n    topics = util_1.uniqBy(topics, t => t.name);\n    return topics;\n  }\n\n  showHelp(argv) {\n    const subject = getHelpSubject(argv);\n\n    if (!subject) {\n      this.showRootHelp();\n      return;\n    }\n\n    const command = this.config.findCommand(subject);\n\n    if (command) {\n      this.showCommandHelp(command);\n      return;\n    }\n\n    const topic = this.config.findTopic(subject);\n\n    if (topic) {\n      this.showTopicHelp(topic);\n      return;\n    }\n\n    errors_1.error(`command ${subject} not found`);\n  }\n\n  showCommandHelp(command) {\n    const name = command.id;\n    const depth = name.split(':').length;\n    const subTopics = this.sortedTopics.filter(t => t.name.startsWith(name + ':') && t.name.split(':').length === depth + 1);\n    const subCommands = this.sortedCommands.filter(c => c.id.startsWith(name + ':') && c.id.split(':').length === depth + 1);\n    const title = command.description && this.render(command.description).split('\\n')[0];\n    if (title) console.log(title + '\\n');\n    console.log(this.formatCommand(command));\n    console.log('');\n\n    if (subTopics.length > 0) {\n      console.log(this.formatTopics(subTopics));\n      console.log('');\n    }\n\n    if (subCommands.length > 0) {\n      console.log(this.formatCommands(subCommands));\n      console.log('');\n    }\n  }\n\n  showRootHelp() {\n    let rootTopics = this.sortedTopics;\n    let rootCommands = this.sortedCommands;\n    console.log(this.formatRoot());\n    console.log('');\n\n    if (!this.opts.all) {\n      rootTopics = rootTopics.filter(t => !t.name.includes(':'));\n      rootCommands = rootCommands.filter(c => !c.id.includes(':'));\n    }\n\n    if (rootTopics.length > 0) {\n      console.log(this.formatTopics(rootTopics));\n      console.log('');\n    }\n\n    if (rootCommands.length > 0) {\n      console.log(this.formatCommands(rootCommands));\n      console.log('');\n    }\n  }\n\n  showTopicHelp(topic) {\n    const name = topic.name;\n    const depth = name.split(':').length;\n    const subTopics = this.sortedTopics.filter(t => t.name.startsWith(name + ':') && t.name.split(':').length === depth + 1);\n    const commands = this.sortedCommands.filter(c => c.id.startsWith(name + ':') && c.id.split(':').length === depth + 1);\n    console.log(this.formatTopic(topic));\n\n    if (subTopics.length > 0) {\n      console.log(this.formatTopics(subTopics));\n      console.log('');\n    }\n\n    if (commands.length > 0) {\n      console.log(this.formatCommands(commands));\n      console.log('');\n    }\n  }\n\n  formatRoot() {\n    const help = new root_1.default(this.config, this.opts);\n    return help.root();\n  }\n\n  formatCommand(command) {\n    const help = new command_1.default(command, this.config, this.opts);\n    return help.generate();\n  }\n\n  formatCommands(commands) {\n    if (commands.length === 0) return '';\n    const body = list_1.renderList(commands.map(c => [c.id, c.description && this.render(c.description.split('\\n')[0])]), {\n      spacer: '\\n',\n      stripAnsi: this.opts.stripAnsi,\n      maxWidth: this.opts.maxWidth - 2\n    });\n    return [bold('COMMANDS'), indent(body, 2)].join('\\n');\n  }\n\n  formatTopic(topic) {\n    let description = this.render(topic.description || '');\n    const title = description.split('\\n')[0];\n    description = description.split('\\n').slice(1).join('\\n');\n    let output = util_1.compact([title, [bold('USAGE'), indent(wrap(`$ ${this.config.bin} ${topic.name}:COMMAND`, this.opts.maxWidth - 2, {\n      trim: false,\n      hard: true\n    }), 2)].join('\\n'), description && [bold('DESCRIPTION'), indent(wrap(description, this.opts.maxWidth - 2, {\n      trim: false,\n      hard: true\n    }), 2)].join('\\n')]).join('\\n\\n');\n    if (this.opts.stripAnsi) output = stripAnsi(output);\n    return output + '\\n';\n  }\n\n  formatTopics(topics) {\n    if (topics.length === 0) return '';\n    const body = list_1.renderList(topics.map(c => [c.name, c.description && this.render(c.description.split('\\n')[0])]), {\n      spacer: '\\n',\n      stripAnsi: this.opts.stripAnsi,\n      maxWidth: this.opts.maxWidth - 2\n    });\n    return [bold('TOPICS'), indent(body, 2)].join('\\n');\n  }\n  /**\n   * @deprecated used for readme generation\n   * @param {object} command The command to generate readme help for\n   * @return {string} the readme help string for the given command\n   */\n\n\n  command(command) {\n    return this.formatCommand(command);\n  }\n\n}\n\nexports.default = Help;\nexports.Help = Help;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/command/node_modules/@oclif/plugin-help/lib/index.js"],"names":["Object","defineProperty","exports","value","errors_1","require","chalk_1","indent","stripAnsi","command_1","list_1","root_1","screen_1","util_1","util_2","getHelpClass","wrap","bold","default","getHelpSubject","args","arg","startsWith","HelpBase","constructor","config","opts","assign","maxWidth","stdtermwidth","Help","render","template","_topics","topics","filter","topic","hasChild","some","subTopic","name","includes","sortedCommands","commands","c","all","hidden","sortBy","id","uniqBy","sortedTopics","t","showHelp","argv","subject","showRootHelp","command","findCommand","showCommandHelp","findTopic","showTopicHelp","error","depth","split","length","subTopics","subCommands","title","description","console","log","formatCommand","formatTopics","formatCommands","rootTopics","rootCommands","formatRoot","formatTopic","help","root","generate","body","renderList","map","spacer","join","slice","output","compact","bin","trim","hard"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"@oclif/errors\");\nconst chalk_1 = require(\"chalk\");\nconst indent = require(\"indent-string\");\nconst stripAnsi = require(\"strip-ansi\");\nconst command_1 = require(\"./command\");\nconst list_1 = require(\"./list\");\nconst root_1 = require(\"./root\");\nconst screen_1 = require(\"./screen\");\nconst util_1 = require(\"./util\");\nconst util_2 = require(\"./util\");\nexports.getHelpClass = util_2.getHelpClass;\nconst wrap = require('wrap-ansi');\nconst { bold, } = chalk_1.default;\nfunction getHelpSubject(args) {\n    for (const arg of args) {\n        if (arg === '--')\n            return;\n        if (arg.startsWith('-'))\n            continue;\n        if (arg === 'help')\n            continue;\n        return arg;\n    }\n}\nclass HelpBase {\n    constructor(config, opts = {}) {\n        this.config = config;\n        this.opts = Object.assign({ maxWidth: screen_1.stdtermwidth }, opts);\n    }\n}\nexports.HelpBase = HelpBase;\nclass Help extends HelpBase {\n    constructor(config, opts = {}) {\n        super(config, opts);\n        this.render = util_1.template(this);\n    }\n    /*\n     * _topics is to work around Config.topics mistakenly including commands that do\n     * not have children, as well as topics. A topic has children, either commands or other topics. When\n     * this is fixed upstream config.topics should return *only* topics with children,\n     * and this can be removed.\n     */\n    get _topics() {\n        return this.config.topics.filter((topic) => {\n            // it is assumed a topic has a child if it has children\n            const hasChild = this.config.topics.some(subTopic => subTopic.name.includes(`${topic.name}:`));\n            return hasChild;\n        });\n    }\n    get sortedCommands() {\n        let commands = this.config.commands;\n        commands = commands.filter(c => this.opts.all || !c.hidden);\n        commands = util_1.sortBy(commands, c => c.id);\n        commands = util_1.uniqBy(commands, c => c.id);\n        return commands;\n    }\n    get sortedTopics() {\n        let topics = this._topics;\n        topics = topics.filter(t => this.opts.all || !t.hidden);\n        topics = util_1.sortBy(topics, t => t.name);\n        topics = util_1.uniqBy(topics, t => t.name);\n        return topics;\n    }\n    showHelp(argv) {\n        const subject = getHelpSubject(argv);\n        if (!subject) {\n            this.showRootHelp();\n            return;\n        }\n        const command = this.config.findCommand(subject);\n        if (command) {\n            this.showCommandHelp(command);\n            return;\n        }\n        const topic = this.config.findTopic(subject);\n        if (topic) {\n            this.showTopicHelp(topic);\n            return;\n        }\n        errors_1.error(`command ${subject} not found`);\n    }\n    showCommandHelp(command) {\n        const name = command.id;\n        const depth = name.split(':').length;\n        const subTopics = this.sortedTopics.filter(t => t.name.startsWith(name + ':') && t.name.split(':').length === depth + 1);\n        const subCommands = this.sortedCommands.filter(c => c.id.startsWith(name + ':') && c.id.split(':').length === depth + 1);\n        const title = command.description && this.render(command.description).split('\\n')[0];\n        if (title)\n            console.log(title + '\\n');\n        console.log(this.formatCommand(command));\n        console.log('');\n        if (subTopics.length > 0) {\n            console.log(this.formatTopics(subTopics));\n            console.log('');\n        }\n        if (subCommands.length > 0) {\n            console.log(this.formatCommands(subCommands));\n            console.log('');\n        }\n    }\n    showRootHelp() {\n        let rootTopics = this.sortedTopics;\n        let rootCommands = this.sortedCommands;\n        console.log(this.formatRoot());\n        console.log('');\n        if (!this.opts.all) {\n            rootTopics = rootTopics.filter(t => !t.name.includes(':'));\n            rootCommands = rootCommands.filter(c => !c.id.includes(':'));\n        }\n        if (rootTopics.length > 0) {\n            console.log(this.formatTopics(rootTopics));\n            console.log('');\n        }\n        if (rootCommands.length > 0) {\n            console.log(this.formatCommands(rootCommands));\n            console.log('');\n        }\n    }\n    showTopicHelp(topic) {\n        const name = topic.name;\n        const depth = name.split(':').length;\n        const subTopics = this.sortedTopics.filter(t => t.name.startsWith(name + ':') && t.name.split(':').length === depth + 1);\n        const commands = this.sortedCommands.filter(c => c.id.startsWith(name + ':') && c.id.split(':').length === depth + 1);\n        console.log(this.formatTopic(topic));\n        if (subTopics.length > 0) {\n            console.log(this.formatTopics(subTopics));\n            console.log('');\n        }\n        if (commands.length > 0) {\n            console.log(this.formatCommands(commands));\n            console.log('');\n        }\n    }\n    formatRoot() {\n        const help = new root_1.default(this.config, this.opts);\n        return help.root();\n    }\n    formatCommand(command) {\n        const help = new command_1.default(command, this.config, this.opts);\n        return help.generate();\n    }\n    formatCommands(commands) {\n        if (commands.length === 0)\n            return '';\n        const body = list_1.renderList(commands.map(c => [\n            c.id,\n            c.description && this.render(c.description.split('\\n')[0]),\n        ]), {\n            spacer: '\\n',\n            stripAnsi: this.opts.stripAnsi,\n            maxWidth: this.opts.maxWidth - 2,\n        });\n        return [\n            bold('COMMANDS'),\n            indent(body, 2),\n        ].join('\\n');\n    }\n    formatTopic(topic) {\n        let description = this.render(topic.description || '');\n        const title = description.split('\\n')[0];\n        description = description.split('\\n').slice(1).join('\\n');\n        let output = util_1.compact([\n            title,\n            [\n                bold('USAGE'),\n                indent(wrap(`$ ${this.config.bin} ${topic.name}:COMMAND`, this.opts.maxWidth - 2, { trim: false, hard: true }), 2),\n            ].join('\\n'),\n            description && ([\n                bold('DESCRIPTION'),\n                indent(wrap(description, this.opts.maxWidth - 2, { trim: false, hard: true }), 2),\n            ].join('\\n')),\n        ]).join('\\n\\n');\n        if (this.opts.stripAnsi)\n            output = stripAnsi(output);\n        return output + '\\n';\n    }\n    formatTopics(topics) {\n        if (topics.length === 0)\n            return '';\n        const body = list_1.renderList(topics.map(c => [\n            c.name,\n            c.description && this.render(c.description.split('\\n')[0]),\n        ]), {\n            spacer: '\\n',\n            stripAnsi: this.opts.stripAnsi,\n            maxWidth: this.opts.maxWidth - 2,\n        });\n        return [\n            bold('TOPICS'),\n            indent(body, 2),\n        ].join('\\n');\n    }\n    /**\n     * @deprecated used for readme generation\n     * @param {object} command The command to generate readme help for\n     * @return {string} the readme help string for the given command\n     */\n    command(command) {\n        return this.formatCommand(command);\n    }\n}\nexports.default = Help;\nexports.Help = Help;\n"]},"metadata":{},"sourceType":"script"}