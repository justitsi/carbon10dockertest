{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst errors_1 = require(\"@oclif/errors\");\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst url_1 = require(\"url\");\n\nconst util_1 = require(\"util\");\n\nconst debug_1 = require(\"./debug\");\n\nconst Plugin = require(\"./plugin\");\n\nconst ts_node_1 = require(\"./ts-node\");\n\nconst util_2 = require(\"./util\"); // eslint-disable-next-line new-cap\n\n\nconst debug = debug_1.default();\n\nconst _pjson = require('../package.json');\n\nfunction channelFromVersion(version) {\n  const m = version.match(/[^-]+(?:-([^.]+))?/);\n  return m && m[1] || 'stable';\n}\n\nfunction hasManifest(p) {\n  try {\n    require(p);\n\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}\n\nconst WSL = require('is-wsl');\n\nclass Config {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(options) {\n    this.options = options;\n    this._base = `${_pjson.name}@${_pjson.version}`;\n    this.debug = 0;\n    this.plugins = [];\n    this.warned = false;\n  } // eslint-disable-next-line complexity\n\n\n  async load() {\n    const plugin = new Plugin.Plugin({\n      root: this.options.root\n    });\n    await plugin.load();\n    this.plugins.push(plugin);\n    this.root = plugin.root;\n    this.pjson = plugin.pjson;\n    this.name = this.pjson.name;\n    this.version = this.options.version || this.pjson.version || '0.0.0';\n    this.channel = this.options.channel || channelFromVersion(this.version);\n    this.valid = plugin.valid;\n    this.arch = os.arch() === 'ia32' ? 'x86' : os.arch();\n    this.platform = WSL ? 'wsl' : os.platform();\n    this.windows = this.platform === 'win32';\n    this.bin = this.pjson.oclif.bin || this.name;\n    this.dirname = this.pjson.oclif.dirname || this.name;\n    if (this.platform === 'win32') this.dirname = this.dirname.replace('/', '\\\\');\n    this.userAgent = `${this.name}/${this.version} ${this.platform}-${this.arch} node-${process.version}`;\n    this.shell = this._shell();\n    this.debug = this._debug();\n    this.home = process.env.HOME || this.windows && this.windowsHome() || os.homedir() || os.tmpdir();\n    this.cacheDir = this.scopedEnvVar('CACHE_DIR') || this.macosCacheDir() || this.dir('cache');\n    this.configDir = this.scopedEnvVar('CONFIG_DIR') || this.dir('config');\n    this.dataDir = this.scopedEnvVar('DATA_DIR') || this.dir('data');\n    this.errlog = path.join(this.cacheDir, 'error.log');\n    this.binPath = this.scopedEnvVar('BINPATH');\n    this.npmRegistry = this.scopedEnvVar('NPM_REGISTRY') || this.pjson.oclif.npmRegistry;\n    this.pjson.oclif.update = this.pjson.oclif.update || {};\n    this.pjson.oclif.update.node = this.pjson.oclif.update.node || {};\n    const s3 = this.pjson.oclif.update.s3 || {};\n    this.pjson.oclif.update.s3 = s3;\n    s3.bucket = this.scopedEnvVar('S3_BUCKET') || s3.bucket;\n    if (s3.bucket && !s3.host) s3.host = `https://${s3.bucket}.s3.amazonaws.com`;\n    s3.templates = Object.assign(Object.assign({}, s3.templates), {\n      target: Object.assign({\n        baseDir: '<%- bin %>',\n        unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>\",\n        versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>\",\n        manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>\"\n      }, s3.templates && s3.templates.target),\n      vanilla: Object.assign({\n        unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>\",\n        versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>\",\n        baseDir: '<%- bin %>',\n        manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version\"\n      }, s3.templates && s3.templates.vanilla)\n    });\n    await this.loadUserPlugins();\n    await this.loadDevPlugins();\n    await this.loadCorePlugins();\n    debug('config done');\n  }\n\n  async loadCorePlugins() {\n    if (this.pjson.oclif.plugins) {\n      await this.loadPlugins(this.root, 'core', this.pjson.oclif.plugins);\n    }\n  }\n\n  async loadDevPlugins() {\n    if (this.options.devPlugins !== false) {\n      // do not load oclif.devPlugins in production\n      if (hasManifest(path.join(this.root, 'oclif.manifest.json'))) return;\n\n      try {\n        const devPlugins = this.pjson.oclif.devPlugins;\n        if (devPlugins) await this.loadPlugins(this.root, 'dev', devPlugins);\n      } catch (error) {\n        process.emitWarning(error);\n      }\n    }\n  }\n\n  async loadUserPlugins() {\n    if (this.options.userPlugins !== false) {\n      try {\n        const userPJSONPath = path.join(this.dataDir, 'package.json');\n        debug('reading user plugins pjson %s', userPJSONPath);\n        const pjson = await util_2.loadJSON(userPJSONPath);\n        this.userPJSON = pjson;\n        if (!pjson.oclif) pjson.oclif = {\n          schema: 1\n        };\n        if (!pjson.oclif.plugins) pjson.oclif.plugins = [];\n        await this.loadPlugins(userPJSONPath, 'user', pjson.oclif.plugins.filter(p => p.type === 'user'));\n        await this.loadPlugins(userPJSONPath, 'link', pjson.oclif.plugins.filter(p => p.type === 'link'));\n      } catch (error) {\n        if (error.code !== 'ENOENT') process.emitWarning(error);\n      }\n    }\n  }\n\n  async runHook(event, opts) {\n    debug('start %s hook', event);\n    const promises = this.plugins.map(p => {\n      const debug = require('debug')([this.bin, p.name, 'hooks', event].join(':'));\n\n      const context = {\n        config: this,\n        debug,\n\n        exit(code = 0) {\n          errors_1.exit(code);\n        },\n\n        log(message, ...args) {\n          process.stdout.write(util_1.format(message, ...args) + '\\n');\n        },\n\n        error(message, options = {}) {\n          errors_1.error(message, options);\n        },\n\n        warn(message) {\n          errors_1.warn(message);\n        }\n\n      };\n      return Promise.all((p.hooks[event] || []).map(async hook => {\n        try {\n          const f = ts_node_1.tsPath(p.root, hook);\n          debug('start', f);\n\n          const search = m => {\n            if (typeof m === 'function') return m;\n            if (m.default && typeof m.default === 'function') return m.default;\n            return Object.values(m).find(m => typeof m === 'function');\n          };\n\n          await search(require(f)).call(context, Object.assign(Object.assign({}, opts), {\n            config: this\n          }));\n          debug('done');\n        } catch (error) {\n          if (error && error.oclif && error.oclif.exit !== undefined) throw error;\n          this.warn(error, `runHook ${event}`);\n        }\n      }));\n    });\n    await Promise.all(promises);\n    debug('%s hook done', event);\n  }\n\n  async runCommand(id, argv = []) {\n    debug('runCommand %s %o', id, argv);\n    const c = this.findCommand(id);\n\n    if (!c) {\n      await this.runHook('command_not_found', {\n        id\n      });\n      throw new errors_1.CLIError(`command ${id} not found`);\n    }\n\n    const command = c.load();\n    await this.runHook('prerun', {\n      Command: command,\n      argv\n    });\n    const result = await command.run(argv, this);\n    await this.runHook('postrun', {\n      Command: command,\n      result: result,\n      argv\n    });\n  }\n\n  scopedEnvVar(k) {\n    return process.env[this.scopedEnvVarKey(k)];\n  }\n\n  scopedEnvVarTrue(k) {\n    const v = process.env[this.scopedEnvVarKey(k)];\n    return v === '1' || v === 'true';\n  }\n\n  scopedEnvVarKey(k) {\n    return [this.bin, k] // eslint-disable-next-line no-useless-escape\n    .map(p => p.replace(/@/g, '').replace(/[-\\/]/g, '_')).join('_').toUpperCase();\n  }\n\n  findCommand(id, opts = {}) {\n    const command = this.commands.find(c => c.id === id || c.aliases.includes(id));\n    if (command) return command;\n    if (opts.must) errors_1.error(`command ${id} not found`);\n  }\n\n  findTopic(name, opts = {}) {\n    const topic = this.topics.find(t => t.name === name);\n    if (topic) return topic;\n    if (opts.must) throw new Error(`topic ${name} not found`);\n  }\n\n  get commands() {\n    return util_2.flatMap(this.plugins, p => p.commands);\n  }\n\n  get commandIDs() {\n    return util_2.uniq(this.commands.map(c => c.id));\n  }\n\n  get topics() {\n    const topics = [];\n\n    for (const plugin of this.plugins) {\n      for (const topic of util_2.compact(plugin.topics)) {\n        const existing = topics.find(t => t.name === topic.name);\n\n        if (existing) {\n          existing.description = topic.description || existing.description;\n          existing.hidden = existing.hidden || topic.hidden;\n        } else topics.push(topic);\n      }\n    } // add missing topics\n\n\n    for (const c of this.commands.filter(c => !c.hidden)) {\n      const parts = c.id.split(':');\n\n      while (parts.length) {\n        const name = parts.join(':');\n\n        if (name && !topics.find(t => t.name === name)) {\n          topics.push({\n            name,\n            description: c.description\n          });\n        }\n\n        parts.pop();\n      }\n    }\n\n    return topics;\n  }\n\n  s3Key(type, ext, options = {}) {\n    if (typeof ext === 'object') options = ext;else if (ext) options.ext = ext;\n\n    const _ = require('lodash');\n\n    return _.template(this.pjson.oclif.update.s3.templates[options.platform ? 'target' : 'vanilla'][type])(Object.assign(Object.assign({}, this), options));\n  }\n\n  s3Url(key) {\n    const host = this.pjson.oclif.update.s3.host;\n    if (!host) throw new Error('no s3 host is set');\n    const url = new url_1.URL(host);\n    url.pathname = path.join(url.pathname, key);\n    return url.toString();\n  }\n\n  dir(category) {\n    const base = process.env[`XDG_${category.toUpperCase()}_HOME`] || this.windows && process.env.LOCALAPPDATA || path.join(this.home, category === 'data' ? '.local/share' : '.' + category);\n    return path.join(base, this.dirname);\n  }\n\n  windowsHome() {\n    return this.windowsHomedriveHome() || this.windowsUserprofileHome();\n  }\n\n  windowsHomedriveHome() {\n    return process.env.HOMEDRIVE && process.env.HOMEPATH && path.join(process.env.HOMEDRIVE, process.env.HOMEPATH);\n  }\n\n  windowsUserprofileHome() {\n    return process.env.USERPROFILE;\n  }\n\n  macosCacheDir() {\n    return this.platform === 'darwin' && path.join(this.home, 'Library', 'Caches', this.dirname) || undefined;\n  }\n\n  _shell() {\n    let shellPath;\n    const {\n      SHELL,\n      COMSPEC\n    } = process.env;\n\n    if (SHELL) {\n      shellPath = SHELL.split('/');\n    } else if (this.windows && COMSPEC) {\n      shellPath = COMSPEC.split(/\\\\|\\//);\n    } else {\n      shellPath = ['unknown'];\n    }\n\n    return shellPath[shellPath.length - 1];\n  }\n\n  _debug() {\n    if (this.scopedEnvVarTrue('DEBUG')) return 1;\n\n    try {\n      const {\n        enabled\n      } = require('debug')(this.bin);\n\n      if (enabled) return 1;\n    } catch (_a) {}\n\n    return 0;\n  }\n\n  async loadPlugins(root, type, plugins, parent) {\n    if (!plugins || plugins.length === 0) return;\n    debug('loading plugins', plugins);\n    await Promise.all((plugins || []).map(async plugin => {\n      try {\n        const opts = {\n          type,\n          root\n        };\n\n        if (typeof plugin === 'string') {\n          opts.name = plugin;\n        } else {\n          opts.name = plugin.name || opts.name;\n          opts.tag = plugin.tag || opts.tag;\n          opts.root = plugin.root || opts.root;\n        }\n\n        const instance = new Plugin.Plugin(opts);\n        await instance.load();\n        if (this.plugins.find(p => p.name === instance.name)) return;\n        this.plugins.push(instance);\n\n        if (parent) {\n          // eslint-disable-next-line require-atomic-updates\n          instance.parent = parent;\n          if (!parent.children) parent.children = [];\n          parent.children.push(instance);\n        }\n\n        await this.loadPlugins(instance.root, type, instance.pjson.oclif.plugins || [], instance);\n      } catch (error) {\n        this.warn(error, 'loadPlugins');\n      }\n    }));\n  }\n\n  warn(err, scope) {\n    if (this.warned) return;\n\n    if (typeof err === 'string') {\n      process.emitWarning(err);\n      return;\n    }\n\n    if (err instanceof Error) {\n      const modifiedErr = err;\n      modifiedErr.name = `${err.name} Plugin: ${this.name}`;\n      modifiedErr.detail = util_2.compact([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n      process.emitWarning(err);\n      return;\n    } // err is an object\n\n\n    process.emitWarning('Config.warn expected either a string or Error, but instead received an object');\n    err.name = `${err.name} Plugin: ${this.name}`;\n    err.detail = util_2.compact([err.detail, `module: ${this._base}`, scope && `task: ${scope}`, `plugin: ${this.name}`, `root: ${this.root}`, 'See more details with DEBUG=*']).join('\\n');\n    process.emitWarning(JSON.stringify(err));\n  }\n\n}\n\nexports.Config = Config;\n\nfunction isConfig(o) {\n  return o && Boolean(o._base);\n}\n\nasync function load(opts = module.parent && module.parent && module.parent.parent && module.parent.parent.filename || __dirname) {\n  if (typeof opts === 'string') opts = {\n    root: opts\n  };\n  if (isConfig(opts)) return opts;\n  const config = new Config(opts);\n  await config.load();\n  return config;\n}\n\nexports.load = load;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/config/lib/config.js"],"names":["Object","defineProperty","exports","value","errors_1","require","os","path","url_1","util_1","debug_1","Plugin","ts_node_1","util_2","debug","default","_pjson","channelFromVersion","version","m","match","hasManifest","p","_a","WSL","Config","constructor","options","_base","name","plugins","warned","load","plugin","root","push","pjson","channel","valid","arch","platform","windows","bin","oclif","dirname","replace","userAgent","process","shell","_shell","_debug","home","env","HOME","windowsHome","homedir","tmpdir","cacheDir","scopedEnvVar","macosCacheDir","dir","configDir","dataDir","errlog","join","binPath","npmRegistry","update","node","s3","bucket","host","templates","assign","target","baseDir","unversioned","versioned","manifest","vanilla","loadUserPlugins","loadDevPlugins","loadCorePlugins","loadPlugins","devPlugins","error","emitWarning","userPlugins","userPJSONPath","loadJSON","userPJSON","schema","filter","type","code","runHook","event","opts","promises","map","context","config","exit","log","message","args","stdout","write","format","warn","Promise","all","hooks","hook","f","tsPath","search","values","find","call","undefined","runCommand","id","argv","c","findCommand","CLIError","command","Command","result","run","k","scopedEnvVarKey","scopedEnvVarTrue","v","toUpperCase","commands","aliases","includes","must","findTopic","topic","topics","t","Error","flatMap","commandIDs","uniq","compact","existing","description","hidden","parts","split","length","pop","s3Key","ext","_","template","s3Url","key","url","URL","pathname","toString","category","base","LOCALAPPDATA","windowsHomedriveHome","windowsUserprofileHome","HOMEDRIVE","HOMEPATH","USERPROFILE","shellPath","SHELL","COMSPEC","enabled","parent","tag","instance","children","err","scope","modifiedErr","detail","JSON","stringify","isConfig","o","Boolean","module","filename","__dirname"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"@oclif/errors\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url_1 = require(\"url\");\nconst util_1 = require(\"util\");\nconst debug_1 = require(\"./debug\");\nconst Plugin = require(\"./plugin\");\nconst ts_node_1 = require(\"./ts-node\");\nconst util_2 = require(\"./util\");\n// eslint-disable-next-line new-cap\nconst debug = debug_1.default();\nconst _pjson = require('../package.json');\nfunction channelFromVersion(version) {\n    const m = version.match(/[^-]+(?:-([^.]+))?/);\n    return (m && m[1]) || 'stable';\n}\nfunction hasManifest(p) {\n    try {\n        require(p);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nconst WSL = require('is-wsl');\nclass Config {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(options) {\n        this.options = options;\n        this._base = `${_pjson.name}@${_pjson.version}`;\n        this.debug = 0;\n        this.plugins = [];\n        this.warned = false;\n    }\n    // eslint-disable-next-line complexity\n    async load() {\n        const plugin = new Plugin.Plugin({ root: this.options.root });\n        await plugin.load();\n        this.plugins.push(plugin);\n        this.root = plugin.root;\n        this.pjson = plugin.pjson;\n        this.name = this.pjson.name;\n        this.version = this.options.version || this.pjson.version || '0.0.0';\n        this.channel = this.options.channel || channelFromVersion(this.version);\n        this.valid = plugin.valid;\n        this.arch = (os.arch() === 'ia32' ? 'x86' : os.arch());\n        this.platform = WSL ? 'wsl' : os.platform();\n        this.windows = this.platform === 'win32';\n        this.bin = this.pjson.oclif.bin || this.name;\n        this.dirname = this.pjson.oclif.dirname || this.name;\n        if (this.platform === 'win32')\n            this.dirname = this.dirname.replace('/', '\\\\');\n        this.userAgent = `${this.name}/${this.version} ${this.platform}-${this.arch} node-${process.version}`;\n        this.shell = this._shell();\n        this.debug = this._debug();\n        this.home = process.env.HOME || (this.windows && this.windowsHome()) || os.homedir() || os.tmpdir();\n        this.cacheDir = this.scopedEnvVar('CACHE_DIR') || this.macosCacheDir() || this.dir('cache');\n        this.configDir = this.scopedEnvVar('CONFIG_DIR') || this.dir('config');\n        this.dataDir = this.scopedEnvVar('DATA_DIR') || this.dir('data');\n        this.errlog = path.join(this.cacheDir, 'error.log');\n        this.binPath = this.scopedEnvVar('BINPATH');\n        this.npmRegistry = this.scopedEnvVar('NPM_REGISTRY') || this.pjson.oclif.npmRegistry;\n        this.pjson.oclif.update = this.pjson.oclif.update || {};\n        this.pjson.oclif.update.node = this.pjson.oclif.update.node || {};\n        const s3 = this.pjson.oclif.update.s3 || {};\n        this.pjson.oclif.update.s3 = s3;\n        s3.bucket = this.scopedEnvVar('S3_BUCKET') || s3.bucket;\n        if (s3.bucket && !s3.host)\n            s3.host = `https://${s3.bucket}.s3.amazonaws.com`;\n        s3.templates = Object.assign(Object.assign({}, s3.templates), { target: Object.assign({ baseDir: '<%- bin %>', unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-<%- platform %>-<%- arch %><%- ext %>\", versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %>-<%- platform %>-<%- arch %><%- ext %>\", manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- platform %>-<%- arch %>\" }, s3.templates && s3.templates.target), vanilla: Object.assign({ unversioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %><%- ext %>\", versioned: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %><%- bin %>-v<%- version %>/<%- bin %>-v<%- version %><%- ext %>\", baseDir: '<%- bin %>', manifest: \"<%- channel === 'stable' ? '' : 'channels/' + channel + '/' %>version\" }, s3.templates && s3.templates.vanilla) });\n        await this.loadUserPlugins();\n        await this.loadDevPlugins();\n        await this.loadCorePlugins();\n        debug('config done');\n    }\n    async loadCorePlugins() {\n        if (this.pjson.oclif.plugins) {\n            await this.loadPlugins(this.root, 'core', this.pjson.oclif.plugins);\n        }\n    }\n    async loadDevPlugins() {\n        if (this.options.devPlugins !== false) {\n            // do not load oclif.devPlugins in production\n            if (hasManifest(path.join(this.root, 'oclif.manifest.json')))\n                return;\n            try {\n                const devPlugins = this.pjson.oclif.devPlugins;\n                if (devPlugins)\n                    await this.loadPlugins(this.root, 'dev', devPlugins);\n            }\n            catch (error) {\n                process.emitWarning(error);\n            }\n        }\n    }\n    async loadUserPlugins() {\n        if (this.options.userPlugins !== false) {\n            try {\n                const userPJSONPath = path.join(this.dataDir, 'package.json');\n                debug('reading user plugins pjson %s', userPJSONPath);\n                const pjson = await util_2.loadJSON(userPJSONPath);\n                this.userPJSON = pjson;\n                if (!pjson.oclif)\n                    pjson.oclif = { schema: 1 };\n                if (!pjson.oclif.plugins)\n                    pjson.oclif.plugins = [];\n                await this.loadPlugins(userPJSONPath, 'user', pjson.oclif.plugins.filter((p) => p.type === 'user'));\n                await this.loadPlugins(userPJSONPath, 'link', pjson.oclif.plugins.filter((p) => p.type === 'link'));\n            }\n            catch (error) {\n                if (error.code !== 'ENOENT')\n                    process.emitWarning(error);\n            }\n        }\n    }\n    async runHook(event, opts) {\n        debug('start %s hook', event);\n        const promises = this.plugins.map(p => {\n            const debug = require('debug')([this.bin, p.name, 'hooks', event].join(':'));\n            const context = {\n                config: this,\n                debug,\n                exit(code = 0) {\n                    errors_1.exit(code);\n                },\n                log(message, ...args) {\n                    process.stdout.write(util_1.format(message, ...args) + '\\n');\n                },\n                error(message, options = {}) {\n                    errors_1.error(message, options);\n                },\n                warn(message) {\n                    errors_1.warn(message);\n                },\n            };\n            return Promise.all((p.hooks[event] || [])\n                .map(async (hook) => {\n                try {\n                    const f = ts_node_1.tsPath(p.root, hook);\n                    debug('start', f);\n                    const search = (m) => {\n                        if (typeof m === 'function')\n                            return m;\n                        if (m.default && typeof m.default === 'function')\n                            return m.default;\n                        return Object.values(m).find((m) => typeof m === 'function');\n                    };\n                    await search(require(f)).call(context, Object.assign(Object.assign({}, opts), { config: this }));\n                    debug('done');\n                }\n                catch (error) {\n                    if (error && error.oclif && error.oclif.exit !== undefined)\n                        throw error;\n                    this.warn(error, `runHook ${event}`);\n                }\n            }));\n        });\n        await Promise.all(promises);\n        debug('%s hook done', event);\n    }\n    async runCommand(id, argv = []) {\n        debug('runCommand %s %o', id, argv);\n        const c = this.findCommand(id);\n        if (!c) {\n            await this.runHook('command_not_found', { id });\n            throw new errors_1.CLIError(`command ${id} not found`);\n        }\n        const command = c.load();\n        await this.runHook('prerun', { Command: command, argv });\n        const result = await command.run(argv, this);\n        await this.runHook('postrun', { Command: command, result: result, argv });\n    }\n    scopedEnvVar(k) {\n        return process.env[this.scopedEnvVarKey(k)];\n    }\n    scopedEnvVarTrue(k) {\n        const v = process.env[this.scopedEnvVarKey(k)];\n        return v === '1' || v === 'true';\n    }\n    scopedEnvVarKey(k) {\n        return [this.bin, k]\n            // eslint-disable-next-line no-useless-escape\n            .map(p => p.replace(/@/g, '').replace(/[-\\/]/g, '_'))\n            .join('_')\n            .toUpperCase();\n    }\n    findCommand(id, opts = {}) {\n        const command = this.commands.find(c => c.id === id || c.aliases.includes(id));\n        if (command)\n            return command;\n        if (opts.must)\n            errors_1.error(`command ${id} not found`);\n    }\n    findTopic(name, opts = {}) {\n        const topic = this.topics.find(t => t.name === name);\n        if (topic)\n            return topic;\n        if (opts.must)\n            throw new Error(`topic ${name} not found`);\n    }\n    get commands() {\n        return util_2.flatMap(this.plugins, p => p.commands);\n    }\n    get commandIDs() {\n        return util_2.uniq(this.commands.map(c => c.id));\n    }\n    get topics() {\n        const topics = [];\n        for (const plugin of this.plugins) {\n            for (const topic of util_2.compact(plugin.topics)) {\n                const existing = topics.find(t => t.name === topic.name);\n                if (existing) {\n                    existing.description = topic.description || existing.description;\n                    existing.hidden = existing.hidden || topic.hidden;\n                }\n                else\n                    topics.push(topic);\n            }\n        }\n        // add missing topics\n        for (const c of this.commands.filter(c => !c.hidden)) {\n            const parts = c.id.split(':');\n            while (parts.length) {\n                const name = parts.join(':');\n                if (name && !topics.find(t => t.name === name)) {\n                    topics.push({ name, description: c.description });\n                }\n                parts.pop();\n            }\n        }\n        return topics;\n    }\n    s3Key(type, ext, options = {}) {\n        if (typeof ext === 'object')\n            options = ext;\n        else if (ext)\n            options.ext = ext;\n        const _ = require('lodash');\n        return _.template(this.pjson.oclif.update.s3.templates[options.platform ? 'target' : 'vanilla'][type])(Object.assign(Object.assign({}, this), options));\n    }\n    s3Url(key) {\n        const host = this.pjson.oclif.update.s3.host;\n        if (!host)\n            throw new Error('no s3 host is set');\n        const url = new url_1.URL(host);\n        url.pathname = path.join(url.pathname, key);\n        return url.toString();\n    }\n    dir(category) {\n        const base = process.env[`XDG_${category.toUpperCase()}_HOME`] ||\n            (this.windows && process.env.LOCALAPPDATA) ||\n            path.join(this.home, category === 'data' ? '.local/share' : '.' + category);\n        return path.join(base, this.dirname);\n    }\n    windowsHome() {\n        return this.windowsHomedriveHome() || this.windowsUserprofileHome();\n    }\n    windowsHomedriveHome() {\n        return (process.env.HOMEDRIVE && process.env.HOMEPATH && path.join(process.env.HOMEDRIVE, process.env.HOMEPATH));\n    }\n    windowsUserprofileHome() {\n        return process.env.USERPROFILE;\n    }\n    macosCacheDir() {\n        return (this.platform === 'darwin' && path.join(this.home, 'Library', 'Caches', this.dirname)) || undefined;\n    }\n    _shell() {\n        let shellPath;\n        const { SHELL, COMSPEC } = process.env;\n        if (SHELL) {\n            shellPath = SHELL.split('/');\n        }\n        else if (this.windows && COMSPEC) {\n            shellPath = COMSPEC.split(/\\\\|\\//);\n        }\n        else {\n            shellPath = ['unknown'];\n        }\n        return shellPath[shellPath.length - 1];\n    }\n    _debug() {\n        if (this.scopedEnvVarTrue('DEBUG'))\n            return 1;\n        try {\n            const { enabled } = require('debug')(this.bin);\n            if (enabled)\n                return 1;\n        }\n        catch (_a) { }\n        return 0;\n    }\n    async loadPlugins(root, type, plugins, parent) {\n        if (!plugins || plugins.length === 0)\n            return;\n        debug('loading plugins', plugins);\n        await Promise.all((plugins || []).map(async (plugin) => {\n            try {\n                const opts = { type, root };\n                if (typeof plugin === 'string') {\n                    opts.name = plugin;\n                }\n                else {\n                    opts.name = plugin.name || opts.name;\n                    opts.tag = plugin.tag || opts.tag;\n                    opts.root = plugin.root || opts.root;\n                }\n                const instance = new Plugin.Plugin(opts);\n                await instance.load();\n                if (this.plugins.find(p => p.name === instance.name))\n                    return;\n                this.plugins.push(instance);\n                if (parent) {\n                    // eslint-disable-next-line require-atomic-updates\n                    instance.parent = parent;\n                    if (!parent.children)\n                        parent.children = [];\n                    parent.children.push(instance);\n                }\n                await this.loadPlugins(instance.root, type, instance.pjson.oclif.plugins || [], instance);\n            }\n            catch (error) {\n                this.warn(error, 'loadPlugins');\n            }\n        }));\n    }\n    warn(err, scope) {\n        if (this.warned)\n            return;\n        if (typeof err === 'string') {\n            process.emitWarning(err);\n            return;\n        }\n        if (err instanceof Error) {\n            const modifiedErr = err;\n            modifiedErr.name = `${err.name} Plugin: ${this.name}`;\n            modifiedErr.detail = util_2.compact([\n                err.detail,\n                `module: ${this._base}`,\n                scope && `task: ${scope}`,\n                `plugin: ${this.name}`,\n                `root: ${this.root}`,\n                'See more details with DEBUG=*',\n            ]).join('\\n');\n            process.emitWarning(err);\n            return;\n        }\n        // err is an object\n        process.emitWarning('Config.warn expected either a string or Error, but instead received an object');\n        err.name = `${err.name} Plugin: ${this.name}`;\n        err.detail = util_2.compact([\n            err.detail,\n            `module: ${this._base}`,\n            scope && `task: ${scope}`,\n            `plugin: ${this.name}`,\n            `root: ${this.root}`,\n            'See more details with DEBUG=*',\n        ]).join('\\n');\n        process.emitWarning(JSON.stringify(err));\n    }\n}\nexports.Config = Config;\nfunction isConfig(o) {\n    return o && Boolean(o._base);\n}\nasync function load(opts = (module.parent && module.parent && module.parent.parent && module.parent.parent.filename) || __dirname) {\n    if (typeof opts === 'string')\n        opts = { root: opts };\n    if (isConfig(opts))\n        return opts;\n    const config = new Config(opts);\n    await config.load();\n    return config;\n}\nexports.load = load;\n"]},"metadata":{},"sourceType":"script"}