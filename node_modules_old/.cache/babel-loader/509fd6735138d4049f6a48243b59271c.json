{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getASTNodeAtPosition = getASTNodeAtPosition;\nexports.pointToOffset = pointToOffset;\n\nvar _Range = require('./Range');\n\nvar _graphql = require('graphql');\n\nfunction getASTNodeAtPosition(query, ast, point) {\n  var offset = pointToOffset(query, point);\n  var nodeContainingPosition = void 0;\n  (0, _graphql.visit)(ast, {\n    enter: function enter(node) {\n      if (node.kind !== 'Name' && // We're usually interested in their parents\n      node.loc && node.loc.start <= offset && offset <= node.loc.end) {\n        nodeContainingPosition = node;\n      } else {\n        return false;\n      }\n    },\n    leave: function leave(node) {\n      if (node.loc && node.loc.start <= offset && offset <= node.loc.end) {\n        return false;\n      }\n    }\n  });\n  return nodeContainingPosition;\n}\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  \n */\n\n\nfunction pointToOffset(text, point) {\n  var linesUntilPosition = text.split('\\n').slice(0, point.line);\n  return point.character + linesUntilPosition.map(function (line) {\n    return line.length + 1;\n  } // count EOL\n  ).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@apollographql/graphql-language-service-utils/dist/getASTNodeAtPosition.js"],"names":["Object","defineProperty","exports","value","getASTNodeAtPosition","pointToOffset","_Range","require","_graphql","query","ast","point","offset","nodeContainingPosition","visit","enter","node","kind","loc","start","end","leave","text","linesUntilPosition","split","slice","line","character","map","length","reduce","a","b"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACAF,OAAO,CAACG,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AAEA,SAASH,oBAAT,CAA8BK,KAA9B,EAAqCC,GAArC,EAA0CC,KAA1C,EAAiD;AAC/C,MAAIC,MAAM,GAAGP,aAAa,CAACI,KAAD,EAAQE,KAAR,CAA1B;AACA,MAAIE,sBAAsB,GAAG,KAAK,CAAlC;AACA,GAAC,GAAGL,QAAQ,CAACM,KAAb,EAAoBJ,GAApB,EAAyB;AACvBK,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAC1B,UAAIA,IAAI,CAACC,IAAL,KAAc,MAAd,IAAwB;AAC5BD,MAAAA,IAAI,CAACE,GADD,IACQF,IAAI,CAACE,GAAL,CAASC,KAAT,IAAkBP,MAD1B,IACoCA,MAAM,IAAII,IAAI,CAACE,GAAL,CAASE,GAD3D,EACgE;AAC9DP,QAAAA,sBAAsB,GAAGG,IAAzB;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF,KARsB;AASvBK,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeL,IAAf,EAAqB;AAC1B,UAAIA,IAAI,CAACE,GAAL,IAAYF,IAAI,CAACE,GAAL,CAASC,KAAT,IAAkBP,MAA9B,IAAwCA,MAAM,IAAII,IAAI,CAACE,GAAL,CAASE,GAA/D,EAAoE;AAClE,eAAO,KAAP;AACD;AACF;AAbsB,GAAzB;AAeA,SAAOP,sBAAP;AACD;AAAC;;;;;;;;;;;AAUF,SAASR,aAAT,CAAuBiB,IAAvB,EAA6BX,KAA7B,EAAoC;AAClC,MAAIY,kBAAkB,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,EAAiBC,KAAjB,CAAuB,CAAvB,EAA0Bd,KAAK,CAACe,IAAhC,CAAzB;AACA,SAAOf,KAAK,CAACgB,SAAN,GAAkBJ,kBAAkB,CAACK,GAAnB,CAAuB,UAAUF,IAAV,EAAgB;AAC9D,WAAOA,IAAI,CAACG,MAAL,GAAc,CAArB;AACD,GAFwB,CAEvB;AAFuB,IAGvBC,MAHuB,CAGhB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACvB,WAAOD,CAAC,GAAGC,CAAX;AACD,GALwB,EAKtB,CALsB,CAAzB;AAMD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getASTNodeAtPosition = getASTNodeAtPosition;\nexports.pointToOffset = pointToOffset;\n\nvar _Range = require('./Range');\n\nvar _graphql = require('graphql');\n\nfunction getASTNodeAtPosition(query, ast, point) {\n  var offset = pointToOffset(query, point);\n  var nodeContainingPosition = void 0;\n  (0, _graphql.visit)(ast, {\n    enter: function enter(node) {\n      if (node.kind !== 'Name' && // We're usually interested in their parents\n      node.loc && node.loc.start <= offset && offset <= node.loc.end) {\n        nodeContainingPosition = node;\n      } else {\n        return false;\n      }\n    },\n    leave: function leave(node) {\n      if (node.loc && node.loc.start <= offset && offset <= node.loc.end) {\n        return false;\n      }\n    }\n  });\n  return nodeContainingPosition;\n} /**\n   *  Copyright (c) Facebook, Inc.\n   *  All rights reserved.\n   *\n   *  This source code is licensed under the license found in the\n   *  LICENSE file in the root directory of this source tree.\n   *\n   *  \n   */\n\nfunction pointToOffset(text, point) {\n  var linesUntilPosition = text.split('\\n').slice(0, point.line);\n  return point.character + linesUntilPosition.map(function (line) {\n    return line.length + 1;\n  } // count EOL\n  ).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}"]},"metadata":{},"sourceType":"script"}