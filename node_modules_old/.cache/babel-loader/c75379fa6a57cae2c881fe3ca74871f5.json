{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst base_1 = require(\"./base\");\n\nclass SimpleAction extends base_1.ActionBase {\n  constructor() {\n    super(...arguments);\n    this.type = 'simple';\n  }\n\n  _start() {\n    const task = this.task;\n    if (!task) return;\n\n    this._render(task.action, task.status);\n  }\n\n  _pause(icon) {\n    if (icon) this._updateStatus(icon);else this._flush();\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  _resume() {}\n\n  _updateStatus(status, prevStatus, newline = false) {\n    const task = this.task;\n    if (!task) return;\n    if (task.active && !prevStatus) this._write(this.std, ` ${status}`);else this._write(this.std, `${task.action}... ${status}`);\n    if (newline || !prevStatus) this._flush();\n  }\n\n  _stop(status) {\n    const task = this.task;\n    if (!task) return;\n\n    this._updateStatus(status, task.status, true);\n  }\n\n  _render(action, status) {\n    const task = this.task;\n    if (!task) return;\n    if (task.active) this._flush();\n\n    this._write(this.std, status ? `${action}... ${status}` : `${action}...`);\n  }\n\n  _flush() {\n    this._write(this.std, '\\n');\n\n    this._flushStdout();\n  }\n\n}\n\nexports.default = SimpleAction;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/cli-ux/lib/action/simple.js"],"names":["Object","defineProperty","exports","value","base_1","require","SimpleAction","ActionBase","constructor","arguments","type","_start","task","_render","action","status","_pause","icon","_updateStatus","_flush","_resume","prevStatus","newline","active","_write","std","_stop","_flushStdout","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,YAAN,SAA2BF,MAAM,CAACG,UAAlC,CAA6C;AACzCC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,IAAL,GAAY,QAAZ;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAI,CAACA,IAAL,EACI;;AACJ,SAAKC,OAAL,CAAaD,IAAI,CAACE,MAAlB,EAA0BF,IAAI,CAACG,MAA/B;AACH;;AACDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,QAAIA,IAAJ,EACI,KAAKC,aAAL,CAAmBD,IAAnB,EADJ,KAGI,KAAKE,MAAL;AACP,GAhBwC,CAiBzC;;;AACAC,EAAAA,OAAO,GAAG,CAAG;;AACbF,EAAAA,aAAa,CAACH,MAAD,EAASM,UAAT,EAAqBC,OAAO,GAAG,KAA/B,EAAsC;AAC/C,UAAMV,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAI,CAACA,IAAL,EACI;AACJ,QAAIA,IAAI,CAACW,MAAL,IAAe,CAACF,UAApB,EACI,KAAKG,MAAL,CAAY,KAAKC,GAAjB,EAAuB,IAAGV,MAAO,EAAjC,EADJ,KAGI,KAAKS,MAAL,CAAY,KAAKC,GAAjB,EAAuB,GAAEb,IAAI,CAACE,MAAO,OAAMC,MAAO,EAAlD;AACJ,QAAIO,OAAO,IAAI,CAACD,UAAhB,EACI,KAAKF,MAAL;AACP;;AACDO,EAAAA,KAAK,CAACX,MAAD,EAAS;AACV,UAAMH,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAI,CAACA,IAAL,EACI;;AACJ,SAAKM,aAAL,CAAmBH,MAAnB,EAA2BH,IAAI,CAACG,MAAhC,EAAwC,IAAxC;AACH;;AACDF,EAAAA,OAAO,CAACC,MAAD,EAASC,MAAT,EAAiB;AACpB,UAAMH,IAAI,GAAG,KAAKA,IAAlB;AACA,QAAI,CAACA,IAAL,EACI;AACJ,QAAIA,IAAI,CAACW,MAAT,EACI,KAAKJ,MAAL;;AACJ,SAAKK,MAAL,CAAY,KAAKC,GAAjB,EAAsBV,MAAM,GAAI,GAAED,MAAO,OAAMC,MAAO,EAA1B,GAA+B,GAAED,MAAO,KAApE;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,SAAKK,MAAL,CAAY,KAAKC,GAAjB,EAAsB,IAAtB;;AACA,SAAKE,YAAL;AACH;;AA/CwC;;AAiD7CzB,OAAO,CAAC0B,OAAR,GAAkBtB,YAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"./base\");\nclass SimpleAction extends base_1.ActionBase {\n    constructor() {\n        super(...arguments);\n        this.type = 'simple';\n    }\n    _start() {\n        const task = this.task;\n        if (!task)\n            return;\n        this._render(task.action, task.status);\n    }\n    _pause(icon) {\n        if (icon)\n            this._updateStatus(icon);\n        else\n            this._flush();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    _resume() { }\n    _updateStatus(status, prevStatus, newline = false) {\n        const task = this.task;\n        if (!task)\n            return;\n        if (task.active && !prevStatus)\n            this._write(this.std, ` ${status}`);\n        else\n            this._write(this.std, `${task.action}... ${status}`);\n        if (newline || !prevStatus)\n            this._flush();\n    }\n    _stop(status) {\n        const task = this.task;\n        if (!task)\n            return;\n        this._updateStatus(status, task.status, true);\n    }\n    _render(action, status) {\n        const task = this.task;\n        if (!task)\n            return;\n        if (task.active)\n            this._flush();\n        this._write(this.std, status ? `${action}... ${status}` : `${action}...`);\n    }\n    _flush() {\n        this._write(this.std, '\\n');\n        this._flushStdout();\n    }\n}\nexports.default = SimpleAction;\n"]},"metadata":{},"sourceType":"script"}