{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction pickBy(obj, fn) {\n  return Object.entries(obj).reduce((o, [k, v]) => {\n    if (fn(v)) o[k] = v;\n    return o;\n  }, {});\n}\n\nexports.pickBy = pickBy;\n\nfunction maxBy(arr, fn) {\n  let max;\n\n  for (const cur of arr) {\n    const i = fn(cur);\n\n    if (!max || i > max.i) {\n      max = {\n        i,\n        element: cur\n      };\n    }\n  }\n\n  return max && max.element;\n}\n\nexports.maxBy = maxBy;\n\nfunction sortBy(arr, fn) {\n  // function castType(t: SortTypes | SortTypes[]): string | number | SortTypes[] {\n  //   if (t === undefined) return 0\n  //   if (t === false) return 1\n  //   if (t === true) return -1\n  //   return t\n  // }\n  function compare(a, b) {\n    a = a === undefined ? 0 : a;\n    b = b === undefined ? 0 : b;\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n      if (a.length === 0 && b.length === 0) return 0;\n      const diff = compare(a[0], b[0]);\n      if (diff !== 0) return diff;\n      return compare(a.slice(1), b.slice(1));\n    }\n\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  }\n\n  return arr.sort((a, b) => compare(fn(a), fn(b)));\n}\n\nexports.sortBy = sortBy;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/parser/lib/util.js"],"names":["Object","defineProperty","exports","value","pickBy","obj","fn","entries","reduce","o","k","v","maxBy","arr","max","cur","i","element","sortBy","compare","a","b","undefined","Array","isArray","length","diff","slice","sort"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;AACrB,SAAON,MAAM,CAACO,OAAP,CAAeF,GAAf,EACFG,MADE,CACK,CAACC,CAAD,EAAI,CAACC,CAAD,EAAIC,CAAJ,CAAJ,KAAe;AACvB,QAAIL,EAAE,CAACK,CAAD,CAAN,EACIF,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP;AACJ,WAAOF,CAAP;AACH,GALM,EAKJ,EALI,CAAP;AAMH;;AACDP,OAAO,CAACE,MAAR,GAAiBA,MAAjB;;AACA,SAASQ,KAAT,CAAeC,GAAf,EAAoBP,EAApB,EAAwB;AACpB,MAAIQ,GAAJ;;AACA,OAAK,MAAMC,GAAX,IAAkBF,GAAlB,EAAuB;AACnB,UAAMG,CAAC,GAAGV,EAAE,CAACS,GAAD,CAAZ;;AACA,QAAI,CAACD,GAAD,IAAQE,CAAC,GAAGF,GAAG,CAACE,CAApB,EAAuB;AACnBF,MAAAA,GAAG,GAAG;AAAEE,QAAAA,CAAF;AAAKC,QAAAA,OAAO,EAAEF;AAAd,OAAN;AACH;AACJ;;AACD,SAAOD,GAAG,IAAIA,GAAG,CAACG,OAAlB;AACH;;AACDf,OAAO,CAACU,KAAR,GAAgBA,KAAhB;;AACA,SAASM,MAAT,CAAgBL,GAAhB,EAAqBP,EAArB,EAAyB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAASa,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACnBD,IAAAA,CAAC,GAAGA,CAAC,KAAKE,SAAN,GAAkB,CAAlB,GAAsBF,CAA1B;AACAC,IAAAA,CAAC,GAAGA,CAAC,KAAKC,SAAN,GAAkB,CAAlB,GAAsBD,CAA1B;;AACA,QAAIE,KAAK,CAACC,OAAN,CAAcJ,CAAd,KAAoBG,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAxB,EAA0C;AACtC,UAAID,CAAC,CAACK,MAAF,KAAa,CAAb,IAAkBJ,CAAC,CAACI,MAAF,KAAa,CAAnC,EACI,OAAO,CAAP;AACJ,YAAMC,IAAI,GAAGP,OAAO,CAACC,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAApB;AACA,UAAIK,IAAI,KAAK,CAAb,EACI,OAAOA,IAAP;AACJ,aAAOP,OAAO,CAACC,CAAC,CAACO,KAAF,CAAQ,CAAR,CAAD,EAAaN,CAAC,CAACM,KAAF,CAAQ,CAAR,CAAb,CAAd;AACH;;AACD,QAAIP,CAAC,GAAGC,CAAR,EACI,OAAO,CAAC,CAAR;AACJ,QAAID,CAAC,GAAGC,CAAR,EACI,OAAO,CAAP;AACJ,WAAO,CAAP;AACH;;AACD,SAAOR,GAAG,CAACe,IAAJ,CAAS,CAACR,CAAD,EAAIC,CAAJ,KAAUF,OAAO,CAACb,EAAE,CAACc,CAAD,CAAH,EAAQd,EAAE,CAACe,CAAD,CAAV,CAA1B,CAAP;AACH;;AACDnB,OAAO,CAACgB,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction pickBy(obj, fn) {\n    return Object.entries(obj)\n        .reduce((o, [k, v]) => {\n        if (fn(v))\n            o[k] = v;\n        return o;\n    }, {});\n}\nexports.pickBy = pickBy;\nfunction maxBy(arr, fn) {\n    let max;\n    for (const cur of arr) {\n        const i = fn(cur);\n        if (!max || i > max.i) {\n            max = { i, element: cur };\n        }\n    }\n    return max && max.element;\n}\nexports.maxBy = maxBy;\nfunction sortBy(arr, fn) {\n    // function castType(t: SortTypes | SortTypes[]): string | number | SortTypes[] {\n    //   if (t === undefined) return 0\n    //   if (t === false) return 1\n    //   if (t === true) return -1\n    //   return t\n    // }\n    function compare(a, b) {\n        a = a === undefined ? 0 : a;\n        b = b === undefined ? 0 : b;\n        if (Array.isArray(a) && Array.isArray(b)) {\n            if (a.length === 0 && b.length === 0)\n                return 0;\n            const diff = compare(a[0], b[0]);\n            if (diff !== 0)\n                return diff;\n            return compare(a.slice(1), b.slice(1));\n        }\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n        return 0;\n    }\n    return arr.sort((a, b) => compare(fn(a), fn(b)));\n}\nexports.sortBy = sortBy;\n"]},"metadata":{},"sourceType":"script"}