{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // tslint:disable no-console\n\nlet debug;\n\ntry {\n  debug = require('debug');\n} catch (_a) {}\n\nfunction displayWarnings() {\n  if (process.listenerCount('warning') > 1) return;\n  process.on('warning', warning => {\n    console.error(warning.stack);\n    if (warning.detail) console.error(warning.detail);\n  });\n}\n\nexports.default = (...scope) => {\n  if (!debug) return (..._) => {};\n  const d = debug(['@oclif/config', ...scope].join(':'));\n  if (d.enabled) displayWarnings();\n  return (...args) => d(...args);\n};","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/config/lib/debug.js"],"names":["Object","defineProperty","exports","value","debug","require","_a","displayWarnings","process","listenerCount","on","warning","console","error","stack","detail","default","scope","_","d","join","enabled","args"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACA,IAAIC,KAAJ;;AACA,IAAI;AACAA,EAAAA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAf;AACH,CAFD,CAGA,OAAOC,EAAP,EAAW,CAAG;;AACd,SAASC,eAAT,GAA2B;AACvB,MAAIC,OAAO,CAACC,aAAR,CAAsB,SAAtB,IAAmC,CAAvC,EACI;AACJD,EAAAA,OAAO,CAACE,EAAR,CAAW,SAAX,EAAuBC,OAAD,IAAa;AAC/BC,IAAAA,OAAO,CAACC,KAAR,CAAcF,OAAO,CAACG,KAAtB;AACA,QAAIH,OAAO,CAACI,MAAZ,EACIH,OAAO,CAACC,KAAR,CAAcF,OAAO,CAACI,MAAtB;AACP,GAJD;AAKH;;AACDb,OAAO,CAACc,OAAR,GAAkB,CAAC,GAAGC,KAAJ,KAAc;AAC5B,MAAI,CAACb,KAAL,EACI,OAAO,CAAC,GAAGc,CAAJ,KAAU,CAAG,CAApB;AACJ,QAAMC,CAAC,GAAGf,KAAK,CAAC,CAAC,eAAD,EAAkB,GAAGa,KAArB,EAA4BG,IAA5B,CAAiC,GAAjC,CAAD,CAAf;AACA,MAAID,CAAC,CAACE,OAAN,EACId,eAAe;AACnB,SAAO,CAAC,GAAGe,IAAJ,KAAaH,CAAC,CAAC,GAAGG,IAAJ,CAArB;AACH,CAPD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable no-console\nlet debug;\ntry {\n    debug = require('debug');\n}\ncatch (_a) { }\nfunction displayWarnings() {\n    if (process.listenerCount('warning') > 1)\n        return;\n    process.on('warning', (warning) => {\n        console.error(warning.stack);\n        if (warning.detail)\n            console.error(warning.detail);\n    });\n}\nexports.default = (...scope) => {\n    if (!debug)\n        return (..._) => { };\n    const d = debug(['@oclif/config', ...scope].join(':'));\n    if (d.enabled)\n        displayWarnings();\n    return (...args) => d(...args);\n};\n"]},"metadata":{},"sourceType":"script"}