{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst errors_1 = require(\"@oclif/errors\");\n\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\n\nvar errors_2 = require(\"@oclif/errors\");\n\nexports.CLIError = errors_2.CLIError; // eslint-disable-next-line new-cap\n\nconst m = deps_1.default() // eslint-disable-next-line node/no-missing-require\n.add('help', () => require('./help')) // eslint-disable-next-line node/no-missing-require\n.add('list', () => require('./list'));\n\nclass CLIParseError extends errors_1.CLIError {\n  constructor(options) {\n    options.message += '\\nSee more help with --help';\n    super(options.message);\n    this.parse = options.parse;\n  }\n\n}\n\nexports.CLIParseError = CLIParseError;\n\nclass InvalidArgsSpecError extends CLIParseError {\n  constructor({\n    args,\n    parse\n  }) {\n    let message = 'Invalid argument spec';\n    const namedArgs = args.filter(a => a.name);\n\n    if (namedArgs.length > 0) {\n      const list = m.list.renderList(namedArgs.map(a => [`${a.name} (${a.required ? 'required' : 'optional'})`, a.description]));\n      message += `:\\n${list}`;\n    }\n\n    super({\n      parse,\n      message\n    });\n    this.args = args;\n  }\n\n}\n\nexports.InvalidArgsSpecError = InvalidArgsSpecError;\n\nclass RequiredArgsError extends CLIParseError {\n  constructor({\n    args,\n    parse\n  }) {\n    let message = `Missing ${args.length} required arg${args.length === 1 ? '' : 's'}`;\n    const namedArgs = args.filter(a => a.name);\n\n    if (namedArgs.length > 0) {\n      const list = m.list.renderList(namedArgs.map(a => [a.name, a.description]));\n      message += `:\\n${list}`;\n    }\n\n    super({\n      parse,\n      message\n    });\n    this.args = args;\n  }\n\n}\n\nexports.RequiredArgsError = RequiredArgsError;\n\nclass RequiredFlagError extends CLIParseError {\n  constructor({\n    flag,\n    parse\n  }) {\n    const usage = m.list.renderList(m.help.flagUsages([flag], {\n      displayRequired: false\n    }));\n    const message = `Missing required flag:\\n${usage}`;\n    super({\n      parse,\n      message\n    });\n    this.flag = flag;\n  }\n\n}\n\nexports.RequiredFlagError = RequiredFlagError;\n\nclass UnexpectedArgsError extends CLIParseError {\n  constructor({\n    parse,\n    args\n  }) {\n    const message = `Unexpected argument${args.length === 1 ? '' : 's'}: ${args.join(', ')}`;\n    super({\n      parse,\n      message\n    });\n    this.args = args;\n  }\n\n}\n\nexports.UnexpectedArgsError = UnexpectedArgsError;\n\nclass FlagInvalidOptionError extends CLIParseError {\n  constructor(flag, input) {\n    const message = `Expected --${flag.name}=${input} to be one of: ${flag.options.join(', ')}`;\n    super({\n      parse: {},\n      message\n    });\n  }\n\n}\n\nexports.FlagInvalidOptionError = FlagInvalidOptionError;\n\nclass ArgInvalidOptionError extends CLIParseError {\n  constructor(arg, input) {\n    const message = `Expected ${input} to be one of: ${arg.options.join(', ')}`;\n    super({\n      parse: {},\n      message\n    });\n  }\n\n}\n\nexports.ArgInvalidOptionError = ArgInvalidOptionError;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/parser/lib/errors.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","errors_1","deps_1","__importDefault","errors_2","CLIError","m","default","add","CLIParseError","constructor","options","message","parse","InvalidArgsSpecError","args","namedArgs","filter","a","name","length","list","renderList","map","required","description","RequiredArgsError","RequiredFlagError","flag","usage","help","flagUsages","displayRequired","UnexpectedArgsError","join","FlagInvalidOptionError","input","ArgInvalidOptionError","arg"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst errors_1 = require(\"@oclif/errors\");\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\nvar errors_2 = require(\"@oclif/errors\");\nexports.CLIError = errors_2.CLIError;\n// eslint-disable-next-line new-cap\nconst m = deps_1.default()\n    // eslint-disable-next-line node/no-missing-require\n    .add('help', () => require('./help'))\n    // eslint-disable-next-line node/no-missing-require\n    .add('list', () => require('./list'));\nclass CLIParseError extends errors_1.CLIError {\n    constructor(options) {\n        options.message += '\\nSee more help with --help';\n        super(options.message);\n        this.parse = options.parse;\n    }\n}\nexports.CLIParseError = CLIParseError;\nclass InvalidArgsSpecError extends CLIParseError {\n    constructor({ args, parse }) {\n        let message = 'Invalid argument spec';\n        const namedArgs = args.filter(a => a.name);\n        if (namedArgs.length > 0) {\n            const list = m.list.renderList(namedArgs.map(a => [`${a.name} (${a.required ? 'required' : 'optional'})`, a.description]));\n            message += `:\\n${list}`;\n        }\n        super({ parse, message });\n        this.args = args;\n    }\n}\nexports.InvalidArgsSpecError = InvalidArgsSpecError;\nclass RequiredArgsError extends CLIParseError {\n    constructor({ args, parse }) {\n        let message = `Missing ${args.length} required arg${args.length === 1 ? '' : 's'}`;\n        const namedArgs = args.filter(a => a.name);\n        if (namedArgs.length > 0) {\n            const list = m.list.renderList(namedArgs.map(a => [a.name, a.description]));\n            message += `:\\n${list}`;\n        }\n        super({ parse, message });\n        this.args = args;\n    }\n}\nexports.RequiredArgsError = RequiredArgsError;\nclass RequiredFlagError extends CLIParseError {\n    constructor({ flag, parse }) {\n        const usage = m.list.renderList(m.help.flagUsages([flag], { displayRequired: false }));\n        const message = `Missing required flag:\\n${usage}`;\n        super({ parse, message });\n        this.flag = flag;\n    }\n}\nexports.RequiredFlagError = RequiredFlagError;\nclass UnexpectedArgsError extends CLIParseError {\n    constructor({ parse, args }) {\n        const message = `Unexpected argument${args.length === 1 ? '' : 's'}: ${args.join(', ')}`;\n        super({ parse, message });\n        this.args = args;\n    }\n}\nexports.UnexpectedArgsError = UnexpectedArgsError;\nclass FlagInvalidOptionError extends CLIParseError {\n    constructor(flag, input) {\n        const message = `Expected --${flag.name}=${input} to be one of: ${flag.options.join(', ')}`;\n        super({ parse: {}, message });\n    }\n}\nexports.FlagInvalidOptionError = FlagInvalidOptionError;\nclass ArgInvalidOptionError extends CLIParseError {\n    constructor(arg, input) {\n        const message = `Expected ${input} to be one of: ${arg.options.join(', ')}`;\n        super({ parse: {}, message });\n    }\n}\nexports.ArgInvalidOptionError = ArgInvalidOptionError;\n"]},"metadata":{},"sourceType":"script"}