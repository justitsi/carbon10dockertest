{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\n\nexports.CHECK_SCHEMA = graphql_tag_1.default`\n  mutation CheckSchema(\n    $id: ID!\n    $schema: IntrospectionSchemaInput\n    $schemaHash: String\n    $tag: String\n    $gitContext: GitContextInput\n    $historicParameters: HistoricQueryParameters\n  ) {\n    service(id: $id) {\n      checkSchema(\n        proposedSchema: $schema\n        proposedSchemaHash: $schemaHash\n        baseSchemaTag: $tag\n        gitContext: $gitContext\n        historicParameters: $historicParameters\n      ) {\n        targetUrl\n        diffToPrevious {\n          severity\n          affectedClients {\n            __typename\n          }\n          affectedQueries {\n            __typename\n          }\n          numberOfCheckedOperations\n          changes {\n            severity\n            code\n            description\n          }\n          validationConfig {\n            from\n            to\n            queryCountThreshold\n            queryCountThresholdPercentage\n          }\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["../../../src/engine/operations/checkSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,YAAA,GAAe,aAAA,CAAA,OAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.CHECK_SCHEMA = graphql_tag_1.default `\n  mutation CheckSchema(\n    $id: ID!\n    $schema: IntrospectionSchemaInput\n    $schemaHash: String\n    $tag: String\n    $gitContext: GitContextInput\n    $historicParameters: HistoricQueryParameters\n  ) {\n    service(id: $id) {\n      checkSchema(\n        proposedSchema: $schema\n        proposedSchemaHash: $schemaHash\n        baseSchemaTag: $tag\n        gitContext: $gitContext\n        historicParameters: $historicParameters\n      ) {\n        targetUrl\n        diffToPrevious {\n          severity\n          affectedClients {\n            __typename\n          }\n          affectedQueries {\n            __typename\n          }\n          numberOfCheckedOperations\n          changes {\n            severity\n            code\n            description\n          }\n          validationConfig {\n            from\n            to\n            queryCountThreshold\n            queryCountThresholdPercentage\n          }\n        }\n      }\n    }\n  }\n`;\n//# sourceMappingURL=checkSchema.js.map"]},"metadata":{},"sourceType":"script"}