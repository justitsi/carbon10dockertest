{"ast":null,"code":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\n\nconst Is = require(\"./utils/is\");\n\nexports.ConfigurationFeature = Base => {\n  return class extends Base {\n    getConfiguration(arg) {\n      if (!arg) {\n        return this._getConfiguration({});\n      } else if (Is.string(arg)) {\n        return this._getConfiguration({\n          section: arg\n        });\n      } else {\n        return this._getConfiguration(arg);\n      }\n    }\n\n    _getConfiguration(arg) {\n      let params = {\n        items: Array.isArray(arg) ? arg : [arg]\n      };\n      return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then(result => {\n        return Array.isArray(arg) ? result : result[0];\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/vscode-languageserver/lib/configuration.js"],"names":["Object","defineProperty","exports","value","vscode_languageserver_protocol_1","require","Is","ConfigurationFeature","Base","getConfiguration","arg","_getConfiguration","string","section","params","items","Array","isArray","connection","sendRequest","ConfigurationRequest","type","then","result"],"mappings":"AAAA;;;;AAIA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,gCAAgC,GAAGC,OAAO,CAAC,gCAAD,CAAhD;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,YAAD,CAAlB;;AACAH,OAAO,CAACK,oBAAR,GAAgCC,IAAD,IAAU;AACrC,SAAO,cAAcA,IAAd,CAAmB;AACtBC,IAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,UAAI,CAACA,GAAL,EAAU;AACN,eAAO,KAAKC,iBAAL,CAAuB,EAAvB,CAAP;AACH,OAFD,MAGK,IAAIL,EAAE,CAACM,MAAH,CAAUF,GAAV,CAAJ,EAAoB;AACrB,eAAO,KAAKC,iBAAL,CAAuB;AAAEE,UAAAA,OAAO,EAAEH;AAAX,SAAvB,CAAP;AACH,OAFI,MAGA;AACD,eAAO,KAAKC,iBAAL,CAAuBD,GAAvB,CAAP;AACH;AACJ;;AACDC,IAAAA,iBAAiB,CAACD,GAAD,EAAM;AACnB,UAAII,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAcP,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD;AADzB,OAAb;AAGA,aAAO,KAAKQ,UAAL,CAAgBC,WAAhB,CAA4Bf,gCAAgC,CAACgB,oBAAjC,CAAsDC,IAAlF,EAAwFP,MAAxF,EAAgGQ,IAAhG,CAAsGC,MAAD,IAAY;AACpH,eAAOP,KAAK,CAACC,OAAN,CAAcP,GAAd,IAAqBa,MAArB,GAA8BA,MAAM,CAAC,CAAD,CAA3C;AACH,OAFM,CAAP;AAGH;;AAnBqB,GAA1B;AAqBH,CAtBD","sourcesContent":["/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nexports.ConfigurationFeature = (Base) => {\r\n    return class extends Base {\r\n        getConfiguration(arg) {\r\n            if (!arg) {\r\n                return this._getConfiguration({});\r\n            }\r\n            else if (Is.string(arg)) {\r\n                return this._getConfiguration({ section: arg });\r\n            }\r\n            else {\r\n                return this._getConfiguration(arg);\r\n            }\r\n        }\r\n        _getConfiguration(arg) {\r\n            let params = {\r\n                items: Array.isArray(arg) ? arg : [arg]\r\n            };\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\r\n                return Array.isArray(arg) ? result : result[0];\r\n            });\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}