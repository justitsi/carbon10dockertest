{"ast":null,"code":"var common = require('./common');\n\nvar os = require('os');\n\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false\n}); // Returns false if 'dir' is not a writeable directory, 'dir' otherwise\n\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n  if (!fs.statSync(dir).isDirectory()) return false;\n  var testFile = dir + '/' + common.randomFileName();\n\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n} //@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\n\nfunction _tempDir() {\n  var state = common.state;\n  if (state.tempDir) return state.tempDir; // from cache\n\n  state.tempDir = writeableDir(os.tmpdir && os.tmpdir()) || // node 0.10+\n  writeableDir(os.tmpDir && os.tmpDir()) || // node 0.8+\n  writeableDir(process.env.TMPDIR) || writeableDir(process.env.TEMP) || writeableDir(process.env.TMP) || writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n  writeableDir('C:\\\\TEMP') || // Windows\n  writeableDir('C:\\\\TMP') || // Windows\n  writeableDir('\\\\TEMP') || // Windows\n  writeableDir('\\\\TMP') || // Windows\n  writeableDir('/tmp') || writeableDir('/var/tmp') || writeableDir('/usr/tmp') || writeableDir('.'); // last resort\n\n  return state.tempDir;\n}\n\nmodule.exports = _tempDir;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/shelljs/src/tempdir.js"],"names":["common","require","os","fs","register","_tempDir","allowGlobbing","wrapOutput","writeableDir","dir","existsSync","statSync","isDirectory","testFile","randomFileName","writeFileSync","unlinkSync","e","state","tempDir","tmpdir","tmpDir","process","env","TMPDIR","TEMP","TMP","Wimp$ScrapDir","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AAEAD,MAAM,CAACI,QAAP,CAAgB,SAAhB,EAA2BC,QAA3B,EAAqC;AACnCC,EAAAA,aAAa,EAAE,KADoB;AAEnCC,EAAAA,UAAU,EAAE;AAFuB,CAArC,E,CAKA;;AACA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAI,CAACA,GAAD,IAAQ,CAACN,EAAE,CAACO,UAAH,CAAcD,GAAd,CAAb,EAAiC,OAAO,KAAP;AAEjC,MAAI,CAACN,EAAE,CAACQ,QAAH,CAAYF,GAAZ,EAAiBG,WAAjB,EAAL,EAAqC,OAAO,KAAP;AAErC,MAAIC,QAAQ,GAAGJ,GAAG,GAAG,GAAN,GAAYT,MAAM,CAACc,cAAP,EAA3B;;AACA,MAAI;AACFX,IAAAA,EAAE,CAACY,aAAH,CAAiBF,QAAjB,EAA2B,GAA3B;AACAb,IAAAA,MAAM,CAACgB,UAAP,CAAkBH,QAAlB;AACA,WAAOJ,GAAP;AACD,GAJD,CAIE,OAAOQ,CAAP,EAAU;AACV;AACA,WAAO,KAAP;AACD;AACF,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASZ,QAAT,GAAoB;AAClB,MAAIa,KAAK,GAAGlB,MAAM,CAACkB,KAAnB;AACA,MAAIA,KAAK,CAACC,OAAV,EAAmB,OAAOD,KAAK,CAACC,OAAb,CAFD,CAEuB;;AAEzCD,EAAAA,KAAK,CAACC,OAAN,GAAgBX,YAAY,CAACN,EAAE,CAACkB,MAAH,IAAalB,EAAE,CAACkB,MAAH,EAAd,CAAZ,IAA0C;AAC1CZ,EAAAA,YAAY,CAACN,EAAE,CAACmB,MAAH,IAAanB,EAAE,CAACmB,MAAH,EAAd,CADZ,IAC0C;AAC1Cb,EAAAA,YAAY,CAACc,OAAO,CAACC,GAAR,CAAYC,MAAb,CAFZ,IAGAhB,YAAY,CAACc,OAAO,CAACC,GAAR,CAAYE,IAAb,CAHZ,IAIAjB,YAAY,CAACc,OAAO,CAACC,GAAR,CAAYG,GAAb,CAJZ,IAKAlB,YAAY,CAACc,OAAO,CAACC,GAAR,CAAYI,aAAb,CALZ,IAK2C;AAC3CnB,EAAAA,YAAY,CAAC,UAAD,CANZ,IAM4B;AAC5BA,EAAAA,YAAY,CAAC,SAAD,CAPZ,IAO2B;AAC3BA,EAAAA,YAAY,CAAC,QAAD,CARZ,IAQ0B;AAC1BA,EAAAA,YAAY,CAAC,OAAD,CATZ,IASyB;AACzBA,EAAAA,YAAY,CAAC,MAAD,CAVZ,IAWAA,YAAY,CAAC,UAAD,CAXZ,IAYAA,YAAY,CAAC,UAAD,CAZZ,IAaAA,YAAY,CAAC,GAAD,CAb5B,CAJkB,CAiBiB;;AAEnC,SAAOU,KAAK,CAACC,OAAb;AACD;;AACDS,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["var common = require('./common');\nvar os = require('os');\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n// Returns false if 'dir' is not a writeable directory, 'dir' otherwise\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n\n  if (!fs.statSync(dir).isDirectory()) return false;\n\n  var testFile = dir + '/' + common.randomFileName();\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n}\n\n\n//@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\nfunction _tempDir() {\n  var state = common.state;\n  if (state.tempDir) return state.tempDir; // from cache\n\n  state.tempDir = writeableDir(os.tmpdir && os.tmpdir()) || // node 0.10+\n                  writeableDir(os.tmpDir && os.tmpDir()) || // node 0.8+\n                  writeableDir(process.env.TMPDIR) ||\n                  writeableDir(process.env.TEMP) ||\n                  writeableDir(process.env.TMP) ||\n                  writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n                  writeableDir('C:\\\\TEMP') || // Windows\n                  writeableDir('C:\\\\TMP') || // Windows\n                  writeableDir('\\\\TEMP') || // Windows\n                  writeableDir('\\\\TMP') || // Windows\n                  writeableDir('/tmp') ||\n                  writeableDir('/var/tmp') ||\n                  writeableDir('/usr/tmp') ||\n                  writeableDir('.'); // last resort\n\n  return state.tempDir;\n}\nmodule.exports = _tempDir;\n"]},"metadata":{},"sourceType":"script"}