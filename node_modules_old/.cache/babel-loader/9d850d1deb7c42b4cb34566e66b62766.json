{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass ValueUUID {\n  constructor(_value) {\n    this._value = _value; // empty\n  }\n\n  asHex() {\n    return this._value;\n  }\n\n  equals(other) {\n    return this.asHex() === other.asHex();\n  }\n\n}\n\nclass V4UUID extends ValueUUID {\n  constructor() {\n    super([V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), '-', V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), '-', '4', V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), '-', V4UUID._oneOf(V4UUID._timeHighBits), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), '-', V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex(), V4UUID._randomHex()].join(''));\n  }\n\n  static _oneOf(array) {\n    return array[Math.floor(array.length * Math.random())];\n  }\n\n  static _randomHex() {\n    return V4UUID._oneOf(V4UUID._chars);\n  }\n\n}\n\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\r\n * An empty UUID that contains only zeros.\r\n */\n\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\n\nfunction v4() {\n  return new V4UUID();\n}\n\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nfunction isUUID(value) {\n  return _UUIDPattern.test(value);\n}\n\nexports.isUUID = isUUID;\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\n\nfunction parse(value) {\n  if (!isUUID(value)) {\n    throw new Error('invalid uuid');\n  }\n\n  return new ValueUUID(value);\n}\n\nexports.parse = parse;\n\nfunction generateUuid() {\n  return v4().asHex();\n}\n\nexports.generateUuid = generateUuid;","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/vscode-languageserver/lib/utils/uuid.js"],"names":["Object","defineProperty","exports","value","ValueUUID","constructor","_value","asHex","equals","other","V4UUID","_randomHex","_oneOf","_timeHighBits","join","array","Math","floor","length","random","_chars","empty","v4","_UUIDPattern","isUUID","test","parse","Error","generateUuid"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n"]},"metadata":{},"sourceType":"script"}