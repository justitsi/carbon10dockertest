{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst Errors = tslib_1.__importStar(require(\"@oclif/errors\"));\n\nconst util = tslib_1.__importStar(require(\"util\"));\n\nconst base_1 = require(\"./action/base\");\n\nexports.ActionBase = base_1.ActionBase;\n\nconst config_1 = require(\"./config\");\n\nexports.config = config_1.config;\nexports.Config = config_1.Config;\n\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\n\nconst exit_1 = require(\"./exit\");\n\nexports.ExitError = exit_1.ExitError;\n\nconst Table = tslib_1.__importStar(require(\"./styled/table\"));\n\nexports.Table = Table;\nexports.ux = {\n  config: config_1.config,\n  warn: Errors.warn,\n  error: Errors.error,\n  exit: Errors.exit,\n\n  get prompt() {\n    return deps_1.default.prompt.prompt;\n  },\n\n  /**\n   * \"press anykey to continue\"\n   */\n  get anykey() {\n    return deps_1.default.prompt.anykey;\n  },\n\n  get confirm() {\n    return deps_1.default.prompt.confirm;\n  },\n\n  get action() {\n    return config_1.config.action;\n  },\n\n  get prideAction() {\n    return config_1.config.prideAction;\n  },\n\n  styledObject(obj, keys) {\n    exports.ux.info(deps_1.default.styledObject(obj, keys));\n  },\n\n  get styledHeader() {\n    return deps_1.default.styledHeader;\n  },\n\n  get styledJSON() {\n    return deps_1.default.styledJSON;\n  },\n\n  get table() {\n    return deps_1.default.table;\n  },\n\n  get tree() {\n    return deps_1.default.tree;\n  },\n\n  get open() {\n    return deps_1.default.open;\n  },\n\n  get wait() {\n    return deps_1.default.wait;\n  },\n\n  get progress() {\n    return deps_1.default.progress;\n  },\n\n  async done() {\n    config_1.config.action.stop(); // await flushStdout()\n  },\n\n  trace(format, ...args) {\n    if (this.config.outputLevel === 'trace') {\n      process.stdout.write(util.format(format, ...args) + '\\n');\n    }\n  },\n\n  debug(format, ...args) {\n    if (['trace', 'debug'].includes(this.config.outputLevel)) {\n      process.stdout.write(util.format(format, ...args) + '\\n');\n    }\n  },\n\n  info(format, ...args) {\n    process.stdout.write(util.format(format, ...args) + '\\n');\n  },\n\n  log(format, ...args) {\n    this.info(format || '', ...args);\n  },\n\n  url(text, uri, params = {}) {\n    const supports = require('supports-hyperlinks');\n\n    if (supports.stdout) {\n      const hyperlinker = require('hyperlinker');\n\n      this.log(hyperlinker(text, uri, params));\n    } else {\n      this.log(uri);\n    }\n  },\n\n  annotation(text, annotation) {\n    const supports = require('supports-hyperlinks');\n\n    if (supports.stdout) {\n      // \\u001b]8;;https://google.com\\u0007sometext\\u001b]8;;\\u0007\n      this.log(`\\u001B]1337;AddAnnotation=${text.length}|${annotation}\\u0007${text}`);\n    } else {\n      this.log(text);\n    }\n  },\n\n  async flush() {\n    function timeout(p, ms) {\n      function wait(ms, unref = false) {\n        return new Promise(resolve => {\n          const t = setTimeout(() => resolve(), ms);\n          if (unref) t.unref();\n        });\n      }\n\n      return Promise.race([p, wait(ms, true).then(() => exports.ux.error('timed out'))]);\n    }\n\n    async function flush() {\n      const p = new Promise(resolve => process.stdout.once('drain', () => resolve()));\n      process.stdout.write('');\n      return p;\n    }\n\n    await timeout(flush(), 10000);\n  }\n\n};\nexports.default = exports.ux;\nexports.cli = exports.ux;\n\nconst cliuxProcessExitHandler = async () => {\n  try {\n    await exports.ux.done();\n  } catch (error) {\n    // tslint:disable no-console\n    console.error(error);\n    process.exitCode = 1;\n  }\n}; // to avoid MaxListenersExceededWarning\n// only attach named listener once\n\n\nconst cliuxListener = process.listeners('exit').find(fn => fn.name === cliuxProcessExitHandler.name);\n\nif (!cliuxListener) {\n  process.once('exit', cliuxProcessExitHandler);\n}","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/cli-ux/lib/index.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","Errors","__importStar","util","base_1","ActionBase","config_1","config","Config","deps_1","__importDefault","exit_1","ExitError","Table","ux","warn","error","exit","prompt","default","anykey","confirm","action","prideAction","styledObject","obj","keys","info","styledHeader","styledJSON","table","tree","open","wait","progress","done","stop","trace","format","args","outputLevel","process","stdout","write","debug","includes","log","url","text","uri","params","supports","hyperlinker","annotation","length","flush","timeout","p","ms","unref","Promise","resolve","t","setTimeout","race","then","once","cli","cliuxProcessExitHandler","console","exitCode","cliuxListener","listeners","find","fn","name"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst Errors = tslib_1.__importStar(require(\"@oclif/errors\"));\nconst util = tslib_1.__importStar(require(\"util\"));\nconst base_1 = require(\"./action/base\");\nexports.ActionBase = base_1.ActionBase;\nconst config_1 = require(\"./config\");\nexports.config = config_1.config;\nexports.Config = config_1.Config;\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\nconst exit_1 = require(\"./exit\");\nexports.ExitError = exit_1.ExitError;\nconst Table = tslib_1.__importStar(require(\"./styled/table\"));\nexports.Table = Table;\nexports.ux = {\n    config: config_1.config,\n    warn: Errors.warn,\n    error: Errors.error,\n    exit: Errors.exit,\n    get prompt() {\n        return deps_1.default.prompt.prompt;\n    },\n    /**\n     * \"press anykey to continue\"\n     */\n    get anykey() {\n        return deps_1.default.prompt.anykey;\n    },\n    get confirm() {\n        return deps_1.default.prompt.confirm;\n    },\n    get action() {\n        return config_1.config.action;\n    },\n    get prideAction() {\n        return config_1.config.prideAction;\n    },\n    styledObject(obj, keys) {\n        exports.ux.info(deps_1.default.styledObject(obj, keys));\n    },\n    get styledHeader() {\n        return deps_1.default.styledHeader;\n    },\n    get styledJSON() {\n        return deps_1.default.styledJSON;\n    },\n    get table() {\n        return deps_1.default.table;\n    },\n    get tree() {\n        return deps_1.default.tree;\n    },\n    get open() {\n        return deps_1.default.open;\n    },\n    get wait() {\n        return deps_1.default.wait;\n    },\n    get progress() {\n        return deps_1.default.progress;\n    },\n    async done() {\n        config_1.config.action.stop();\n        // await flushStdout()\n    },\n    trace(format, ...args) {\n        if (this.config.outputLevel === 'trace') {\n            process.stdout.write(util.format(format, ...args) + '\\n');\n        }\n    },\n    debug(format, ...args) {\n        if (['trace', 'debug'].includes(this.config.outputLevel)) {\n            process.stdout.write(util.format(format, ...args) + '\\n');\n        }\n    },\n    info(format, ...args) {\n        process.stdout.write(util.format(format, ...args) + '\\n');\n    },\n    log(format, ...args) {\n        this.info(format || '', ...args);\n    },\n    url(text, uri, params = {}) {\n        const supports = require('supports-hyperlinks');\n        if (supports.stdout) {\n            const hyperlinker = require('hyperlinker');\n            this.log(hyperlinker(text, uri, params));\n        }\n        else {\n            this.log(uri);\n        }\n    },\n    annotation(text, annotation) {\n        const supports = require('supports-hyperlinks');\n        if (supports.stdout) {\n            // \\u001b]8;;https://google.com\\u0007sometext\\u001b]8;;\\u0007\n            this.log(`\\u001B]1337;AddAnnotation=${text.length}|${annotation}\\u0007${text}`);\n        }\n        else {\n            this.log(text);\n        }\n    },\n    async flush() {\n        function timeout(p, ms) {\n            function wait(ms, unref = false) {\n                return new Promise(resolve => {\n                    const t = setTimeout(() => resolve(), ms);\n                    if (unref)\n                        t.unref();\n                });\n            }\n            return Promise.race([p, wait(ms, true).then(() => exports.ux.error('timed out'))]);\n        }\n        async function flush() {\n            const p = new Promise(resolve => process.stdout.once('drain', () => resolve()));\n            process.stdout.write('');\n            return p;\n        }\n        await timeout(flush(), 10000);\n    },\n};\nexports.default = exports.ux;\nexports.cli = exports.ux;\nconst cliuxProcessExitHandler = async () => {\n    try {\n        await exports.ux.done();\n    }\n    catch (error) {\n        // tslint:disable no-console\n        console.error(error);\n        process.exitCode = 1;\n    }\n};\n// to avoid MaxListenersExceededWarning\n// only attach named listener once\nconst cliuxListener = process.listeners('exit').find(fn => fn.name === cliuxProcessExitHandler.name);\nif (!cliuxListener) {\n    process.once('exit', cliuxProcessExitHandler);\n}\n"]},"metadata":{},"sourceType":"script"}