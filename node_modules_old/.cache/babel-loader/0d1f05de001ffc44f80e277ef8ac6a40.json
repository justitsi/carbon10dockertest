{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction termwidth(stream) {\n  if (!stream.isTTY) {\n    return 80;\n  }\n\n  const width = stream.getWindowSize()[0];\n\n  if (width < 1) {\n    return 80;\n  }\n\n  if (width < 40) {\n    return 40;\n  }\n\n  return width;\n}\n\nconst columns = global.columns;\nexports.stdtermwidth = columns || termwidth(process.stdout);\nexports.errtermwidth = columns || termwidth(process.stderr);\nprocess.stdout.on('resize', () => {\n  exports.stdtermwidth = columns || termwidth(process.stdout);\n});\nprocess.stderr.on('resize', () => {\n  exports.errtermwidth = columns || termwidth(process.stderr);\n});","map":{"version":3,"sources":["/Users/hristobelchev/test_projects/testing_react/react-box-app/box-app/node_modules/@oclif/screen/lib/screen.js"],"names":["Object","defineProperty","exports","value","termwidth","stream","isTTY","width","getWindowSize","columns","global","stdtermwidth","process","stdout","errtermwidth","stderr","on"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACvB,MAAI,CAACA,MAAM,CAACC,KAAZ,EAAmB;AACf,WAAO,EAAP;AACH;;AACD,QAAMC,KAAK,GAAGF,MAAM,CAACG,aAAP,GAAuB,CAAvB,CAAd;;AACA,MAAID,KAAK,GAAG,CAAZ,EAAe;AACX,WAAO,EAAP;AACH;;AACD,MAAIA,KAAK,GAAG,EAAZ,EAAgB;AACZ,WAAO,EAAP;AACH;;AACD,SAAOA,KAAP;AACH;;AACD,MAAME,OAAO,GAAGC,MAAM,CAACD,OAAvB;AACAP,OAAO,CAACS,YAAR,GAAuBF,OAAO,IAAIL,SAAS,CAACQ,OAAO,CAACC,MAAT,CAA3C;AACAX,OAAO,CAACY,YAAR,GAAuBL,OAAO,IAAIL,SAAS,CAACQ,OAAO,CAACG,MAAT,CAA3C;AACAH,OAAO,CAACC,MAAR,CAAeG,EAAf,CAAkB,QAAlB,EAA4B,MAAM;AAC9Bd,EAAAA,OAAO,CAACS,YAAR,GAAuBF,OAAO,IAAIL,SAAS,CAACQ,OAAO,CAACC,MAAT,CAA3C;AACH,CAFD;AAGAD,OAAO,CAACG,MAAR,CAAeC,EAAf,CAAkB,QAAlB,EAA4B,MAAM;AAC9Bd,EAAAA,OAAO,CAACY,YAAR,GAAuBL,OAAO,IAAIL,SAAS,CAACQ,OAAO,CAACG,MAAT,CAA3C;AACH,CAFD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction termwidth(stream) {\n    if (!stream.isTTY) {\n        return 80;\n    }\n    const width = stream.getWindowSize()[0];\n    if (width < 1) {\n        return 80;\n    }\n    if (width < 40) {\n        return 40;\n    }\n    return width;\n}\nconst columns = global.columns;\nexports.stdtermwidth = columns || termwidth(process.stdout);\nexports.errtermwidth = columns || termwidth(process.stderr);\nprocess.stdout.on('resize', () => {\n    exports.stdtermwidth = columns || termwidth(process.stdout);\n});\nprocess.stderr.on('resize', () => {\n    exports.errtermwidth = columns || termwidth(process.stderr);\n});\n"]},"metadata":{},"sourceType":"script"}